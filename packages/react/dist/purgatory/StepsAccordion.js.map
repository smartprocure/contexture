{"version":3,"sources":["../../src/purgatory/StepsAccordion.js"],"names":["Buttons","_","flow","observer","withTheme","step","totalSteps","currentStep","onSubmit","theme","Button","Icon","F","sets","AccordionStep","style","className","title","isRequired","children","open","view","cursor","callOrReturn","marginLeft","StepsAccordion","noop","props","React","useState","Children","map","child","i","size"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA,IAAIA,OAAO,GAAGC,eAAEC,IAAF,CACZ,+BAAe,SAAf,CADY,EAEZC,mBAFY,EAGZC,gBAHY,EAIZ;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,UAAT,QAASA,UAAT;AAAA,MAAqBC,WAArB,QAAqBA,WAArB;AAAA,MAAkCC,QAAlC,QAAkCA,QAAlC;AAAA,wBAA4CC,KAA5C;AAAA,MAAqDC,MAArD,cAAqDA,MAArD;AAAA,MAA6DC,IAA7D,cAA6DA,IAA7D;AAAA,sBACA,kEACGN,IAAI,GAAG,CAAP,iBACC,gCAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,kBAAEC,IAAF,CAAOR,IAAI,GAAG,CAAd,EAAiBE,WAAjB,CAAjB;AAAgD,IAAA,SAAS,EAAC;AAA1D,kBACE,gCAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADF,SAFJ,EAOGF,IAAI,GAAGC,UAAU,GAAG,CAApB,gBACC,gCAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEM,kBAAEC,IAAF,CAAOR,IAAI,GAAG,CAAd,EAAiBE,WAAjB,CAAzB;AAAwD,IAAA,QAAQ,EAAE;AAAlE,gBADD,gBAKC,gCAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEC;AAAzB,oBAZJ,CADA;AAAA,CAJY,CAAd;;AAwBO,IAAIM,aAAa,GAAGb,eAAEC,IAAF,CACzB,+BAAe,eAAf,CADyB,EAEzBE,gBAFyB,EAIzB,iBAWM;AAAA,MAVJW,KAUI,SAVJA,KAUI;AAAA,MATJC,SASI,SATJA,SASI;AAAA,MARJX,IAQI,SARJA,IAQI;AAAA,MAPJC,UAOI,SAPJA,UAOI;AAAA,MANJC,WAMI,SANJA,WAMI;AAAA,MALJU,KAKI,SALJA,KAKI;AAAA,+BAJJC,UAII;AAAA,MAJJA,UAII,iCAJS,KAIT;AAAA,MAHJV,QAGI,SAHJA,QAGI;AAAA,MAFJW,QAEI,SAFJA,QAEI;AAAA,MADKR,IACL,SADJF,KACI,CADKE,IACL;AACJ,MAAIS,IAAI,GAAGR,kBAAES,IAAF,CAAOd,WAAP,MAAwBF,IAAnC;AACA,sBACE;AAAK,IAAA,SAAS,2BAAoBW,SAAS,IAAI,EAAjC,CAAd;AAAqD,IAAA,KAAK,EAAED;AAA5D,kBACE,gCAAC,cAAD;AACE,IAAA,UAAU,EAAC,QADb;AAEE,IAAA,cAAc,EAAC,eAFjB;AAGE,IAAA,OAAO,EAAEH,kBAAEC,IAAF,CAAOO,IAAI,GAAG,CAAC,CAAJ,GAAQf,IAAnB,EAAyBE,WAAzB,CAHX;AAIE,IAAA,KAAK,EAAE;AAAEe,MAAAA,MAAM,EAAE;AAAV;AAJT,kBAME,gCAAC,cAAD;AAAM,IAAA,UAAU,EAAC;AAAjB,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGV,kBAAEW,YAAF,CAAeN,KAAf,EAAsBZ,IAAtB,CADH,CADF,EAIG,CAACa,UAAD,iBAAe;AAAI,IAAA,KAAK,EAAE;AAAEM,MAAAA,UAAU,EAAE;AAAd;AAAX,kBAJlB,CANF,eAYE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,gCAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,IAAI,GAAG,oBAAH,GAA0B;AAA1C,IADF,CAZF,CADF,EAiBGA,IAAI,iBACH,+EACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAgCD,QAAhC,CADF,eAEE,gCAAC,OAAD,EAAa;AAAEd,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,UAAU,EAAVA,UAAR;AAAoBC,IAAAA,WAAW,EAAXA,WAApB;AAAiCC,IAAAA,QAAQ,EAARA;AAAjC,GAAb,CAFF,CAlBJ,CADF;AA0BD,CA3CwB,CAApB;;;;AA8CP,IAAIiB,cAAc,GAAG,SAAjBA,cAAiB,QAA0D;AAAA,6BAAvDjB,QAAuD;AAAA,MAAvDA,QAAuD,+BAA5CP,eAAEyB,IAA0C;AAAA,MAApCP,QAAoC,SAApCA,QAAoC;AAAA,MAA1BH,SAA0B,SAA1BA,SAA0B;AAAA,MAAZW,KAAY;;AAC7E,MAAIpB,WAAW,GAAGqB,kBAAMC,QAAN,CAAe,CAAf,CAAlB;;AACA,sBACE;AAAK,IAAA,SAAS,4BAAqBb,SAAS,IAAI,EAAlC;AAAd,KAA0DW,KAA1D,GACGC,kBAAME,QAAN,CAAeC,GAAf,CAAmBZ,QAAnB,EAA6B,UAACa,KAAD,EAAQC,CAAR;AAAA,wBAC5B,gCAAC,KAAD,CAAO,IAAP,WACM;AAAE1B,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,QAAQ,EAARA;AAAf,KADN;AAEE,MAAA,GAAG,EAAEyB,CAFP;AAGE,MAAA,IAAI,EAAEA,CAHR;AAIE,MAAA,UAAU,EAAEhC,eAAEiC,IAAF,CAAOf,QAAP;AAJd,OAKMa,KAAK,CAACL,KALZ,EAD4B;AAAA,GAA7B,CADH,CADF;AAaD,CAfD;;eAiBeF,c","sourcesContent":["import _ from 'lodash/fp'\nimport F from 'futil'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { setDisplayName } from 'recompose'\nimport { Flex } from '../greyVest'\nimport { withTheme } from '../utils/theme'\n\n// Observes node, so we can activate the Continue button if it (or any child) has a value.\n// We don't observe on Step because then it would rerender its children when `node`\n// changes, which unfocuses query inputs as soon as the first character is entered.\nlet Buttons = _.flow(\n  setDisplayName('Buttons'),\n  observer,\n  withTheme\n)(({ step, totalSteps, currentStep, onSubmit, theme: { Button, Icon } }) => (\n  <>\n    {step > 0 && (\n      <Button onClick={F.sets(step - 1, currentStep)} className=\"back-button\">\n        <Icon icon=\"PreviousPage\" />\n        Back\n      </Button>\n    )}\n    {step < totalSteps - 1 ? (\n      <Button primary onClick={F.sets(step + 1, currentStep)} disabled={false}>\n        Continue\n      </Button>\n    ) : (\n      <Button primary onClick={onSubmit}>\n        View Results\n      </Button>\n    )}\n  </>\n))\n\nexport let AccordionStep = _.flow(\n  setDisplayName('AccordionStep'),\n  withTheme\n)(\n  ({\n    style,\n    className,\n    step,\n    totalSteps,\n    currentStep,\n    title,\n    isRequired = false,\n    onSubmit,\n    children,\n    theme: { Icon },\n  }) => {\n    let open = F.view(currentStep) === step\n    return (\n      <div className={`accordion-step ${className || ''}`} style={style}>\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          onClick={F.sets(open ? -1 : step, currentStep)}\n          style={{ cursor: 'pointer' }}\n        >\n          <Flex alignItems=\"center\">\n            <div className=\"accordion-step-title\">\n              {F.callOrReturn(title, step)}\n            </div>\n            {!isRequired && <em style={{ marginLeft: 6 }}>(Optional)</em>}\n          </Flex>\n          <div className=\"filter-field-label-icon\">\n            <Icon icon={open ? 'FilterListCollapse' : 'FilterListExpand'} />\n          </div>\n        </Flex>\n        {open && (\n          <>\n            <div className=\"step-contents\">{children}</div>\n            <Buttons {...{ step, totalSteps, currentStep, onSubmit }} />\n          </>\n        )}\n      </div>\n    )\n  }\n)\n\nlet StepsAccordion = ({ onSubmit = _.noop, children, className, ...props }) => {\n  let currentStep = React.useState(0)\n  return (\n    <div className={`steps-accordion ${className || ''}`} {...props}>\n      {React.Children.map(children, (child, i) => (\n        <child.type\n          {...{ currentStep, onSubmit }}\n          key={i}\n          step={i}\n          totalSteps={_.size(children)}\n          {...child.props}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default StepsAccordion\n"],"file":"StepsAccordion.js"}