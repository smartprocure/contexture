{"version":3,"sources":["../../src/queryBuilder/Rule.js"],"names":["Rule","node","parent","tree","connectDragSource","isDragging","props","hover","indent","remove","rule","styles","w100","condition","bdJoin","F","view","borderStyle","opacity","bgStriped","background","domLens","visibility","minWidth","color","joinColor","join","btn","roundedRight0","roundedLeft0","marginLeft","path","_","flow","observer","FilterDragSource"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAIA,IAAI,GAAG,SAAPA,IAAO,OAOL;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,iBAGI,QAHJA,iBAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADDC,KACC;;AACJ,MAAIC,KAAK,GAAG,2BAAc;AACxBC,IAAAA,MAAM,EAAE,KADgB;AAExBC,IAAAA,MAAM,EAAE,KAFgB;AAGxBC,IAAAA,IAAI,EAAE;AAHkB,GAAd,CAAZ;AAKA,SAAON,iBAAiB,eACtB;AAAK,IAAA,KAAK,EAAEO,mBAAOC;AAAnB,kBACE,gCAAC,sBAAD;AAAY,IAAA,MAAM,EAAEV,MAApB;AAA4B,IAAA,MAAM,EAAEK,KAAK,CAACC;AAA1C,kBACE;AACE,IAAA,KAAK,4EACAG,mBAAOE,SADP,GAEAF,mBAAOG,MAAP,CAAcZ,MAAd,CAFA,GAGCa,kBAAEC,IAAF,CAAOT,KAAK,CAACE,MAAb;AACFQ,MAAAA,WAAW,EAAE,QADX;AAEFC,MAAAA,OAAO,EAAE;AAFP,OAGCP,mBAAOQ,SAHR,CAHD,GAQCd,UAAU,IAAI;AAAEa,MAAAA,OAAO,EAAE;AAAX,KARf,GASCH,kBAAEC,IAAF,CAAOT,KAAK,CAACG,IAAb,KAAsB;AAAEU,MAAAA,UAAU,EAAET,mBAAOS;AAArB,KATvB;AADP,KAYML,kBAAEM,OAAF,CAAUd,KAAV,CAAgBA,KAAK,CAACG,IAAtB,CAZN,gBAcE,gCAAC,0BAAD;AAAsBT,IAAAA,IAAI,EAAJA,IAAtB;AAA4BE,IAAAA,IAAI,EAAJA;AAA5B,KAAqCG,KAArC,EAdF,eAeE;AACE,IAAA,KAAK,kCACCS,kBAAEC,IAAF,CAAOT,KAAK,CAACG,IAAb,KAAsB;AAAEY,MAAAA,UAAU,EAAE;AAAd,KADvB;AAEHC,MAAAA,QAAQ,EAAE;AAFP;AADP,kBAME,uDACMR,kBAAEM,OAAF,CAAUd,KAAV,CAAgBA,KAAK,CAACC,MAAtB,CADN;AAEE,IAAA,KAAK;AACHgB,MAAAA,KAAK,EAAEb,mBAAOc,SAAP,CAAiB,0BAAavB,MAAM,CAACwB,IAApB,CAAjB;AADJ,OAEAf,mBAAOgB,GAFP,GAGAhB,mBAAOiB,aAHP,CAFP;AAOE,IAAA,OAAO,EAAE;AAAA,aAAM,oBAAOzB,IAAP,EAAaD,MAAb,EAAqBD,IAArB,CAAN;AAAA;AAPX,UANF,eAiBE,uDACMc,kBAAEM,OAAF,CAAUd,KAAV,CAAgBA,KAAK,CAACE,MAAtB,CADN;AAEE,IAAA,KAAK,gDACAE,mBAAOgB,GADP,GAEAhB,mBAAOkB,YAFP;AAGHC,MAAAA,UAAU,EAAE;AAHT,MAFP;AAOE,IAAA,OAAO,EAAE;AAAA,aAAM3B,IAAI,CAACM,MAAL,CAAYR,IAAI,CAAC8B,IAAjB,CAAN;AAAA;AAPX,UAjBF,CAfF,CADF,CADF,CADsB,CAAxB;AAmDD,CAhED;;eAkEeC,eAAEC,IAAF,CAAOC,mBAAP,EAAiBC,4BAAjB,EAAmCnC,IAAnC,C","sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport _ from 'lodash/fp'\nimport F from 'futil'\nimport styles from '../styles'\nimport Indentable from './preview/Indentable'\nimport FilterContents from './FilterContents'\nimport FilterDragSource from './DragDrop/FilterDragSource'\nimport { oppositeJoin, indent } from '../utils/search'\nimport { useLensObject } from '../utils/react'\n\nlet Rule = ({\n  node,\n  parent,\n  tree,\n  connectDragSource,\n  isDragging,\n  ...props\n}) => {\n  let hover = useLensObject({\n    indent: false,\n    remove: false,\n    rule: false,\n  })\n  return connectDragSource(\n    <div style={styles.w100}>\n      <Indentable parent={parent} indent={hover.indent}>\n        <div\n          style={{\n            ...styles.condition,\n            ...styles.bdJoin(parent),\n            ...(F.view(hover.remove) && {\n              borderStyle: 'dashed',\n              opacity: 0.25,\n              ...styles.bgStriped,\n            }),\n            ...(isDragging && { opacity: 0.25 }),\n            ...(F.view(hover.rule) && { background: styles.background }),\n          }}\n          {...F.domLens.hover(hover.rule)}\n        >\n          <FilterContents {...{ node, tree, ...props }} />\n          <div\n            style={{\n              ...(F.view(hover.rule) || { visibility: 'hidden' }),\n              minWidth: 82,\n            }}\n          >\n            <button\n              {...F.domLens.hover(hover.indent)}\n              style={{\n                color: styles.joinColor(oppositeJoin(parent.join)),\n                ...styles.btn,\n                ...styles.roundedRight0,\n              }}\n              onClick={() => indent(tree, parent, node)}\n            >\n              >\n            </button>\n            <button\n              {...F.domLens.hover(hover.remove)}\n              style={{\n                ...styles.btn,\n                ...styles.roundedLeft0,\n                marginLeft: '-1px',\n              }}\n              onClick={() => tree.remove(node.path)}\n            >\n              X\n            </button>\n          </div>\n        </div>\n      </Indentable>\n    </div>\n  )\n}\n\nexport default _.flow(observer, FilterDragSource)(Rule)\n"],"file":"Rule.js"}