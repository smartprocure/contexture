{"version":3,"sources":["../../../src/queryBuilder/DragDrop/MoveTargets.js"],"names":["FilterMoveSpec","drop","props","monitor","getItem","node","tree","move","path","index","FilterMoveDropTarget","style","connectDropTarget","isOver","canDrop","styles","bgPreview","OperatorMoveTarget","width","operatorWidth","height","FilterMoveTarget","w100","marginTop"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA;AACA,IAAIA,cAAc,GAAG;AACnBC,EAAAA,IADmB,gBACdC,KADc,EACPC,OADO,EACE;AAAA,2BACJA,OAAO,CAACC,OAAR,EADI;AAAA,QACbC,IADa,oBACbA,IADa;;AAEnBH,IAAAA,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgBF,IAAI,CAACG,IAArB,EAA2B;AACzBA,MAAAA,IAAI,EAAEN,KAAK,CAACG,IAAN,CAAWG,IADQ;AAEzBC,MAAAA,KAAK,EAAEP,KAAK,CAACO;AAFY,KAA3B;AAID;AAPkB,CAArB;;AASA,IAAIC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK;AAAA,SAC9B,kCAAiBX,cAAjB,EACE;AAAA,QAAGK,IAAH,QAAGA,IAAH;AAAA,QAASO,iBAAT,QAASA,iBAAT;AAAA,QAA4BC,MAA5B,QAA4BA,MAA5B;AAAA,QAAoCC,OAApC,QAAoCA,OAApC;AAAA,WACEF,iBAAiB,CACfE,OAAO,gBACL;AACE,MAAA,KAAK,kCACAC,mBAAOC,SAAP,CAAiBX,IAAjB,CADA,GAEAM,KAAK,CAAC;AAAEE,QAAAA,MAAM,EAANA;AAAF,OAAD,CAFL;AADP,MADK,gBAQL,4CATa,CADnB;AAAA,GADF,CAD8B;AAAA,CAAhC;;AAiBO,IAAII,kBAAkB,GAAGP,oBAAoB,CAAC;AAAA,SAAO;AAC1DQ,IAAAA,KAAK,YAAKH,mBAAOI,aAAZ,OADqD;AAE1DC,IAAAA,MAAM,EAAE;AAFkD,GAAP;AAAA,CAAD,CAA7C;;AAIA,IAAIC,gBAAgB,GAAGX,oBAAoB,CAAC;AAAA,MAAGG,MAAH,SAAGA,MAAH;AAAA,yCAC9CE,mBAAOO,IADuC;AAEjDF,IAAAA,MAAM,EAAEP,MAAM,GAAG,MAAH,GAAY,MAFuB;AAGjDU,IAAAA,SAAS,EAAE;AAHsC;AAAA,CAAD,CAA3C","sourcesContent":["import React from 'react'\nimport FilterDropTarget from './FilterDropTarget'\nimport styles from '../../styles'\n\n// Move\nlet FilterMoveSpec = {\n  drop(props, monitor) {\n    let { node } = monitor.getItem()\n    props.tree.move(node.path, {\n      path: props.node.path,\n      index: props.index,\n    })\n  },\n}\nlet FilterMoveDropTarget = style =>\n  FilterDropTarget(FilterMoveSpec)(\n    ({ node, connectDropTarget, isOver, canDrop }) =>\n      connectDropTarget(\n        canDrop ? (\n          <div\n            style={{\n              ...styles.bgPreview(node),\n              ...style({ isOver }),\n            }}\n          />\n        ) : (\n          <div />\n        )\n      )\n  )\n\nexport let OperatorMoveTarget = FilterMoveDropTarget(() => ({\n  width: `${styles.operatorWidth}px`,\n  height: '100%',\n}))\nexport let FilterMoveTarget = FilterMoveDropTarget(({ isOver }) => ({\n  ...styles.w100,\n  height: isOver ? '50px' : '15px',\n  marginTop: '-15px',\n}))\n"],"file":"MoveTargets.js"}