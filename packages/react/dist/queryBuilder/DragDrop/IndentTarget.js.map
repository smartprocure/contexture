{"version":3,"sources":["../../../src/queryBuilder/DragDrop/IndentTarget.js"],"names":["FilterIndentSpec","drop","props","monitor","source","getItem","isSelf","child","node","tree","remove","newGroup","move","path","index","FilterIndentTarget","connectDropTarget","canDrop","dragItem","children","width","marginLeft","height","position","styles","bgStriped","bgPreview","join","zIndex"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;AACA,IAAIA,gBAAgB,GAAG;AACrBC,EAAAA,IADqB,gBAChBC,KADgB,EACTC,OADS,EACA;AACnB,QAAIC,MAAM,GAAGD,OAAO,CAACE,OAAR,EAAb;AACA,QAAIC,MAAM,GAAGJ,KAAK,CAACK,KAAN,KAAgBH,MAAM,CAACI,IAApC;;AACA,QAAIF,MAAJ,EAAY;AACVJ,MAAAA,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkBR,KAAK,CAACK,KAAxB;AACD,KAFD,MAEO;AACL,UAAII,QAAQ,GAAG,oBAAOT,KAAK,CAACO,IAAb,EAAmBP,KAAK,CAACM,IAAzB,EAA+BN,KAAK,CAACK,KAArC,EAA4C,IAA5C,CAAf;AACAL,MAAAA,KAAK,CAACO,IAAN,CAAWG,IAAX,CAAgBR,MAAM,CAACI,IAAP,CAAYK,IAA5B,EAAkC;AAChCA,QAAAA,IAAI,EAAEF,QAAQ,CAACE,IADiB;AAEhCC,QAAAA,KAAK,EAAE;AAFyB,OAAlC;AAID;AACF;AAboB,CAAvB;AAeO,IAAIC,kBAAkB,GAAG,kCAAiBf,gBAAjB,EAC9B;AAAA,MACEO,KADF,QACEA,KADF;AAAA,MAEEC,IAFF,QAEEA,IAFF;AAAA,MAGEQ,iBAHF,QAGEA,iBAHF;AAAA,MAKEC,OALF,QAKEA,OALF;AAAA,MAMEC,QANF,QAMEA,QANF;AAAA,SAQEF,iBAAiB,eACf,6CACG,CAACT,KAAK,CAACY,QAAP,IAAmBF,OAAnB,iBACC;AACE,IAAA,KAAK;AACHG,MAAAA,KAAK,EAAE,KADJ;AAEHC,MAAAA,UAAU,EAAE,KAFT;AAGHC,MAAAA,MAAM,EAAE,EAHL;AAIHC,MAAAA,QAAQ,EAAE;AAJP,OAKCL,QAAQ,CAACV,IAAT,KAAkBD,KAAlB,GACAiB,mBAAOC,SADP,GAEAD,mBAAOE,SAAP,CAAiB,0BAAalB,IAAI,CAACmB,IAAlB,CAAjB,CAPD;AAQHC,MAAAA,MAAM,EAAE;AARL;AADP,IAFJ,CADe,CARnB;AAAA,CAD8B,CAAzB","sourcesContent":["import React from 'react'\nimport FilterDropTarget from './FilterDropTarget'\nimport styles from '../../styles'\nimport { oppositeJoin, indent } from '../../utils/search'\n\n// Indent\nlet FilterIndentSpec = {\n  drop(props, monitor) {\n    let source = monitor.getItem()\n    let isSelf = props.child === source.node\n    if (isSelf) {\n      props.tree.remove(props.child)\n    } else {\n      let newGroup = indent(props.tree, props.node, props.child, true)\n      props.tree.move(source.node.path, {\n        path: newGroup.path,\n        index: 1,\n      })\n    }\n  },\n}\nexport let FilterIndentTarget = FilterDropTarget(FilterIndentSpec)(\n  ({\n    child,\n    node,\n    connectDropTarget,\n    // isOver,\n    canDrop,\n    dragItem,\n  }) =>\n    connectDropTarget(\n      <div>\n        {!child.children && canDrop && (\n          <div\n            style={{\n              width: '50%',\n              marginLeft: '50%',\n              height: 50,\n              position: 'fixed',\n              ...(dragItem.node === child\n                ? styles.bgStriped\n                : styles.bgPreview(oppositeJoin(node.join))),\n              zIndex: 100,\n            }}\n          />\n        )}\n      </div>\n    )\n)\n"],"file":"IndentTarget.js"}