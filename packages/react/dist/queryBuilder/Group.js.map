{"version":3,"sources":["../../src/queryBuilder/Group.js"],"names":["background","styles","GroupItem","props","child","node","index","tree","adding","isRoot","parent","connectDragSource","hover","Component","children","Group","Rule","dFlex","length","F","view","_","flow","observer","wrap","join","remove","conditions","w100","bdJoin","bgStriped","borderColor","conditionsInner","opacity","mapIndexed","key","toArray","add","path","marginLeft","borderTopLeftRadius","borderBottomLeftRadius"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport * as F from 'futil'\nimport { observer } from 'mobx-react'\nimport styles from '../styles'\nimport Indentable from './preview/Indentable'\nimport AddPreview from './preview/AddPreview'\nimport Operator from './Operator'\nimport Rule from './Rule'\nimport FilterDragSource from './DragDrop/FilterDragSource'\nimport { FilterIndentTarget } from './DragDrop/IndentTarget'\nimport { FilterMoveTarget } from './DragDrop/MoveTargets'\nlet { background } = styles\nimport { blankNode } from '../utils/search'\nimport { useLensObject } from '../utils/react'\nimport { setDisplayName } from 'recompose'\n\nlet GroupItem = FilterDragSource(props => {\n  let {\n    child,\n    node,\n    index,\n    tree,\n    adding,\n    isRoot,\n    parent,\n    connectDragSource,\n    hover,\n  } = props\n  let Component = child.children ? Group : Rule\n  return connectDragSource(\n    <div\n      style={{\n        ...styles.dFlex,\n        ...(index === node.children.length - 1 &&\n          !F.view(adding) && { background }),\n      }}\n    >\n      {!(isRoot && node.children.length === 1) && (\n        <Operator {...{ node, child, tree, parent, index, hover }} />\n      )}\n      <Component {...props} node={child} parent={node} />\n    </div>\n  )\n})\n\n// we need to observe this here and not on the export because Group is referenced elsewhere in the file\nlet Group = _.flow(\n  setDisplayName('Group'),\n  observer\n)(props => {\n  let { parent, node, tree, adding, isRoot } = props\n  let hover = useLensObject({ wrap: false, join: '', remove: false })\n  return (\n    <Indentable parent={parent} indent={hover.wrap}>\n      <div\n        style={{\n          ...styles.conditions,\n          ...(!isRoot && styles.w100),\n          ...styles.bdJoin(node),\n          ...(F.view(hover.remove) && {\n            ...styles.bgStriped,\n            borderColor: background,\n          }),\n        }}\n      >\n        <div\n          style={{\n            ...styles.conditionsInner,\n            ...(F.view(hover.remove) && { opacity: 0.25 }),\n          }}\n        >\n          {F.mapIndexed(\n            (child, index) => (\n              <div key={child.key + index}>\n                <FilterIndentTarget {...{ ...props, child, index }} />\n                {/*<FilterMoveTarget index={index} tree={tree} />*/}\n                <GroupItem {...{ ...props, child, index, adding, hover }} />\n                {\n                  /*index !== (tree.children.length-1) &&*/ !child.children && (\n                    <FilterMoveTarget {...{ ...props, child, index }} />\n                  )\n                }\n              </div>\n            ),\n            _.toArray(node.children)\n          )}\n          {/*<FilterMoveTarget index={tree.children.length} tree={tree} /> */}\n          {F.view(adding) && (\n            <AddPreview\n              onClick={() => {\n                tree.add(node.path, blankNode())\n              }}\n              join={node.join}\n              style={{\n                marginLeft: 0,\n                borderTopLeftRadius: 5,\n                borderBottomLeftRadius: 5,\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </Indentable>\n  )\n})\n\nexport default Group\n"],"file":"Group.js"}