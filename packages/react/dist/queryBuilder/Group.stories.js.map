{"version":3,"sources":["../../src/queryBuilder/Group.stories.js"],"names":["module","addDecorator","DnDDecorator","add","key","join","children","type","root","typ"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,uBAAU,gDAAV,EAA4DA,MAA5D,EACGC,YADH,CACgBC,kBADhB,EAEGC,GAFH,CAEO,YAFP,EAEqB;AAAA,sBACjB,gCAAC,iBAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAE,MADD;AAEJC,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,QAAQ,EAAE,CAAC;AAAEF,QAAAA,GAAG,EAAE,UAAP;AAAmBG,QAAAA,IAAI,EAAE;AAAzB,OAAD;AAHN,KADR;AAME,IAAA,IAAI,EAAEC,UANR;AAOE,IAAA,MAAM,EAAE;AAPV,IADiB;AAAA,CAFrB,EAaGL,GAbH,CAaO,kBAbP,EAa2B;AAAA,sBACvB,gCAAC,iBAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAE,MADD;AAEJC,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBH,QAAAA,GAAG,EAAE;AAAtB,OADQ,EAER;AACEA,QAAAA,GAAG,EAAE,QADP;AAEEC,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,QAAQ,EAAE,CACR;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBH,UAAAA,GAAG,EAAE;AAAtB,SADQ,EAER;AAAEG,UAAAA,IAAI,EAAE,OAAR;AAAiBH,UAAAA,GAAG,EAAE;AAAtB,SAFQ,EAGR;AACEA,UAAAA,GAAG,EAAE,QADP;AAEEC,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,QAAQ,EAAE,CACR;AACEF,YAAAA,GAAG,EAAE,WADP;AAEEG,YAAAA,IAAI,EAAE;AAFR,WADQ,EAKR;AAAEA,YAAAA,IAAI,EAAE,OAAR;AAAiBH,YAAAA,GAAG,EAAE;AAAtB,WALQ;AAHZ,SAHQ;AAHZ,OAFQ,EAqBR;AAAEG,QAAAA,IAAI,EAAE,OAAR;AAAiBH,QAAAA,GAAG,EAAE;AAAtB,OArBQ,EAsBR;AACEA,QAAAA,GAAG,EAAE,QADP;AAEEC,QAAAA,IAAI,EAAE,KAFR;AAGEC,QAAAA,QAAQ,EAAE,CACR;AAAEF,UAAAA,GAAG,EAAE,WAAP;AAAoBG,UAAAA,IAAI,EAAE;AAA1B,SADQ,EAER;AAAEA,UAAAA,IAAI,EAAE,OAAR;AAAiBH,UAAAA,GAAG,EAAE;AAAtB,SAFQ;AAHZ,OAtBQ,EA8BR;AACEA,QAAAA,GAAG,EAAE,SADP;AAEEC,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,QAAQ,EAAE,CACR;AACEF,UAAAA,GAAG,EAAE,QADP;AAEEC,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,QAAQ,EAAE,CACR;AAAEC,YAAAA,IAAI,EAAE,OAAR;AAAiBH,YAAAA,GAAG,EAAE;AAAtB,WADQ,EAER;AAAEA,YAAAA,GAAG,EAAE,eAAP;AAAwBG,YAAAA,IAAI,EAAE;AAA9B,WAFQ;AAHZ,SADQ,EASR;AACEH,UAAAA,GAAG,EAAE,MADP;AAEEK,UAAAA,GAAG,EAAE;AAFP,SATQ;AAHZ,OA9BQ;AAHN,KADR;AAsDE,IAAA,IAAI,EAAED,UAtDR;AAuDE,IAAA,MAAM,EAAE;AAvDV,IADuB;AAAA,CAb3B","sourcesContent":["import React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { root, DnDDecorator } from './stories/util'\nimport Group from './Group'\n\nstoriesOf('Search Components|QueryBuilder/Internals/Group', module)\n  .addDecorator(DnDDecorator)\n  .add('One Filter', () => (\n    <Group\n      node={{\n        key: 'root',\n        join: 'and',\n        children: [{ key: 'filter 1', type: 'query' }],\n      }}\n      root={root}\n      isRoot={true}\n    />\n  ))\n  .add('Multiple Filters', () => (\n    <Group\n      node={{\n        key: 'root',\n        join: 'and',\n        children: [\n          { type: 'query', key: 'filter 1' },\n          {\n            key: 'group1',\n            join: 'or',\n            children: [\n              { type: 'query', key: 'filter 2a' },\n              { type: 'query', key: 'filter 2b' },\n              {\n                key: 'group2',\n                join: 'and',\n                children: [\n                  {\n                    key: 'filter 4a',\n                    type: 'facet',\n                  },\n                  { type: 'query', key: 'filter 4b' },\n                ],\n              },\n            ],\n          },\n          { type: 'query', key: 'filter 3' },\n          {\n            key: 'group2',\n            join: 'not',\n            children: [\n              { key: 'filter 5a', type: 'number' },\n              { type: 'query', key: 'filter 5b' },\n            ],\n          },\n          {\n            key: 'group24',\n            join: 'or',\n            children: [\n              {\n                key: 'group2',\n                join: 'and',\n                children: [\n                  { type: 'query', key: 'filter 4a' },\n                  { key: 'txt filter 4b', type: 'text' },\n                ],\n              },\n              {\n                key: 'asdf',\n                typ: 'query',\n              },\n            ],\n          },\n        ],\n      }}\n      root={root}\n      isRoot={true}\n    />\n  ))\n"],"file":"Group.stories.js"}