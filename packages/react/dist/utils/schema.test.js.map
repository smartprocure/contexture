{"version":3,"sources":["../../src/utils/schema.test.js"],"names":["test","mapNodeToComponent","TypeMap","defaultProps","component","UnmappedNodeComponent","node","type","expect","toEqual","Facet","unmappedNode","undefined","not"],"mappings":";;AAAA;;AACA;;AACA;;;;;;;;AAEAA,IAAI,CAAC,kBAAD,EAAqB,YAAM;AAC7B,MAAIC,kBAAkB,GAAG,8BAAiBC,qBAAjB,CAAzB;AACA,MAAIC,YAAY,GAAG;AAAEC,IAAAA,SAAS,EAAEC;AAAb,GAAnB,CAF6B,CAE2B;;AAExD,MAAIC,IAAI,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAX;AACAC,EAAAA,MAAM,CAACP,kBAAkB,CAACK,IAAD,CAAnB,CAAN,CAAiCG,OAAjC,CAAyC;AAAEL,IAAAA,SAAS,EAAEM;AAAb,GAAzC;AAEA,MAAIC,YAAY,GAAG;AAAEJ,IAAAA,IAAI,EAAE;AAAR,GAAnB;AACAC,EAAAA,MAAM,CAACP,kBAAkB,CAACU,YAAD,CAAnB,CAAN,CAAyCF,OAAzC,CAAiDG,SAAjD,EAR6B,CAU7B;;AACAJ,EAAAA,MAAM,iCAAML,YAAN,GAAuBF,kBAAkB,CAACU,YAAD,CAAzC,EAAN,CAAiEF,OAAjE,CAAyE;AACvEL,IAAAA,SAAS,EAAEC;AAD4D,GAAzE;AAGAG,EAAAA,MAAM,iCAAML,YAAN,GAAuBF,kBAAkB,CAACK,IAAD,CAAzC,EAAN,CAAyDO,GAAzD,CAA6DJ,OAA7D,CAAqE;AACnEL,IAAAA,SAAS,EAAEC;AADwD,GAArE;AAGD,CAjBG,CAAJ","sourcesContent":["import { componentForType } from './schema'\nimport { TypeMap, Facet } from '../exampleTypes'\nimport { UnmappedNodeComponent } from '../themes/base'\n\ntest('componentForType', () => {\n  let mapNodeToComponent = componentForType(TypeMap)\n  let defaultProps = { component: UnmappedNodeComponent } // for realism\n\n  let node = { type: 'facet' }\n  expect(mapNodeToComponent(node)).toEqual({ component: Facet })\n\n  let unmappedNode = { type: 'little-teapot' }\n  expect(mapNodeToComponent(unmappedNode)).toEqual(undefined)\n\n  // merge test\n  expect({ ...defaultProps, ...mapNodeToComponent(unmappedNode) }).toEqual({\n    component: UnmappedNodeComponent,\n  })\n  expect({ ...defaultProps, ...mapNodeToComponent(node) }).not.toEqual({\n    component: UnmappedNodeComponent,\n  })\n})\n"],"file":"schema.test.js"}