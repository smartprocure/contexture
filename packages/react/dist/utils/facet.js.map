{"version":3,"sources":["../../src/utils/facet.js"],"names":["commonStyle","justifyContent","alignItems","display","cursor","displayFn","name","label","_","isString","displayBlankFn","Cardinality","flow","observer","node","tree","get","min","size","context","options","cardinality","mutate","path","SelectAll","withTheme","Checkbox","theme","missingOptions","difference","map","values","allSelected","isEmpty","concat","flex","padding","FacetOptionsFilter","TextInput","Button","ButtonGroup","optionsFilter","val","setVal","buttonEnabled","submit","e","target","value","key","FacetCheckboxList","hide","displayBlank","formatCount","partition","x","includes","flatten","count","lens","F","domLens","checkboxValues","counts"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,WAAW,GAAG;AAChBC,EAAAA,cAAc,EAAE,eADA;AAEhBC,EAAAA,UAAU,EAAE,QAFI;AAGhBC,EAAAA,OAAO,EAAE,MAHO;AAIhBC,EAAAA,MAAM,EAAE;AAJQ,CAAlB;;AAOO,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,KAAP;AAAA,SAAkBC,eAAEC,QAAF,CAAWF,KAAX,IAAoBA,KAApB,GAA4BD,IAA9C;AAAA,CAAhB;;;;AACA,IAAII,cAAc,GAAG,SAAjBA,cAAiB;AAAA,sBAAM,2DAAN;AAAA,CAArB;;;;AAEA,IAAIC,WAAW,GAAGH,eAAEI,IAAF,CACvB,+BAAe,aAAf,CADuB,EAEvBC,mBAFuB,EAGvB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,IAAT,QAASA,IAAT;AAAA,SACAP,eAAEQ,GAAF,CAAM,qBAAN,EAA6BF,IAA7B,iBACE,gCAAC,cAAD;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,cAAc,EAAC;AAFjB,kBAIE,wDACU,GADV,EAEG,sBAASN,eAAES,GAAF,CAAM,CAACH,IAAI,CAACI,IAAL,IAAa,EAAd,EAAkBV,eAAEU,IAAF,CAAOJ,IAAI,CAACK,OAAL,CAAaC,OAApB,CAAlB,CAAN,CAAT,CAFH,SAEwE,GAFxE,EAGG,sBAASN,IAAI,CAACK,OAAL,CAAaE,WAAtB,CAHH,CAJF,EASGP,IAAI,CAACK,OAAL,CAAaE,WAAb,IAA4BP,IAAI,CAACI,IAAL,IAAa,EAAzC,kBACC,0DACE;AACE,IAAA,OAAO,EAAE;AAAA,aACPH,IAAI,CAACO,MAAL,CAAYR,IAAI,CAACS,IAAjB,EAAuB;AAAEL,QAAAA,IAAI,EAAE,CAACJ,IAAI,CAACI,IAAL,IAAa,EAAd,IAAoB;AAA5B,OAAvB,CADO;AAAA,KADX;AAIE,IAAA,KAAK,EAAE;AAAEd,MAAAA,MAAM,EAAE;AAAV;AAJT,iBADF,CAVJ,CADF,GAuBI,IAxBJ;AAAA,CAHuB,CAAlB;;;;AA8BA,IAAIoB,SAAS,GAAGhB,eAAEI,IAAF,CACrB,+BAAe,WAAf,CADqB,EAErBC,mBAFqB,EAGrBY,gBAHqB,EAIrB,iBAAyC;AAAA,MAAtCX,IAAsC,SAAtCA,IAAsC;AAAA,MAAhCC,IAAgC,SAAhCA,IAAgC;AAAA,MAAjBW,QAAiB,SAA1BC,KAA0B,CAAjBD,QAAiB;;AACzC,MAAIE,cAAc,GAAGpB,eAAEqB,UAAF,CACnBrB,eAAEsB,GAAF,CAAM,MAAN,EAActB,eAAEQ,GAAF,CAAM,iBAAN,EAAyBF,IAAzB,CAAd,CADmB,EAEnBA,IAAI,CAACiB,MAFc,CAArB;;AAIA,MAAIC,WAAW,GAAGxB,eAAEyB,OAAF,CAAUL,cAAV,CAAlB;;AACA,sBACE;AAAO,IAAA,KAAK,EAAE5B;AAAd,kBACE,gCAAC,QAAD;AACE,IAAA,OAAO,EAAEgC,WADX;AAEE,IAAA,QAAQ,EAAE,oBAAM;AACd,UAAIA,WAAJ,EACEjB,IAAI,CAACO,MAAL,CAAYR,IAAI,CAACS,IAAjB,EAAuB;AACrBQ,QAAAA,MAAM,EAAE;AADa,OAAvB,EADF,KAKEhB,IAAI,CAACO,MAAL,CAAYR,IAAI,CAACS,IAAjB,EAAuB;AACrBQ,QAAAA,MAAM,EAAEjB,IAAI,CAACiB,MAAL,CAAYG,MAAZ,CAAmBN,cAAnB;AADa,OAAvB;AAGH;AAXH,IADF,eAcE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB;AAAZ,0BAdF,CADF;AAkBD,CA5BsB,CAAhB;;;;AA8BA,IAAIC,kBAAkB,GAAG7B,eAAEI,IAAF,CAC9B,+BAAe,oBAAf,CAD8B,EAE9BC,mBAF8B,EAG9BY,gBAH8B,EAI9B,iBAA+D;AAAA,MAA5DV,IAA4D,SAA5DA,IAA4D;AAAA,MAAtDD,IAAsD,SAAtDA,IAAsD;AAAA,0BAAhDa,KAAgD;AAAA,MAAvCW,SAAuC,eAAvCA,SAAuC;AAAA,MAA5BC,MAA4B,eAA5BA,MAA4B;AAAA,MAApBC,WAAoB,eAApBA,WAAoB;;AAAA,kBAC3C,qBAAS1B,IAAI,CAAC2B,aAAd,CAD2C;AAAA;AAAA,MAC1DC,GAD0D;AAAA,MACrDC,MADqD;;AAE/D,MAAIC,aAAa,GAAGF,GAAG,KAAK5B,IAAI,CAAC2B,aAAjC;;AACA,MAAII,MAAM,GAAG,SAATA,MAAS;AAAA,WACXD,aAAa,IAAI7B,IAAI,CAACO,MAAL,CAAYR,IAAI,CAACS,IAAjB,EAAuB;AAAEkB,MAAAA,aAAa,EAAEC;AAAjB,KAAvB,CADN;AAAA,GAAb;;AAEA,sBACE,gCAAC,WAAD,qBACE,gCAAC,SAAD;AACE,IAAA,KAAK,EAAEA,GADT;AAEE,IAAA,QAAQ,EAAE,kBAAAI,CAAC,EAAI;AACbH,MAAAA,MAAM,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD,KAJH;AAKE,IAAA,UAAU,EAAE,oBAAAF,CAAC;AAAA,aAAIA,CAAC,CAACG,GAAF,KAAU,OAAV,IAAqBJ,MAAM,EAA/B;AAAA,KALf;AAME,IAAA,MAAM,EAAEA,MANV;AAOE,IAAA,WAAW,EAAC;AAPd,IADF,eAUE,gCAAC,MAAD;AAAQ,IAAA,OAAO,EAAE/B,IAAI,CAAC2B,aAAL,KAAuBC,GAAxC;AAA6C,IAAA,OAAO,EAAEG;AAAtD,YAVF,CADF;AAgBD,CAzB+B,CAAzB;;;AA2BA,IAAIK,iBAAiB,GAAG,oCAC7B;AAAA,MACEnC,IADF,SACEA,IADF;AAAA,MAEED,IAFF,SAEEA,IAFF;AAAA,MAGEqC,IAHF,SAGEA,IAHF;AAAA,4BAIEhD,OAJF;AAAA,MAIEA,OAJF,8BAIYE,SAJZ;AAAA,iCAKE+C,YALF;AAAA,MAKEA,YALF,mCAKiB1C,cALjB;AAAA,MAME2C,WANF,SAMEA,WANF;AAAA,MAOW3B,QAPX,SAOEC,KAPF,CAOWD,QAPX;AAAA,SASElB,eAAEI,IAAF,CACEJ,eAAE8C,SAAF,CAAY,UAAAC,CAAC;AAAA,WAAI/C,eAAEgD,QAAF,CAAWD,CAAC,CAACjD,IAAb,EAAmBQ,IAAI,CAACiB,MAAxB,CAAJ;AAAA,GAAb,CADF,EAEEvB,eAAEiD,OAFJ,EAGEjD,eAAEsB,GAAF,CAAM,iBAA4B;AAAA,QAAzBxB,IAAyB,SAAzBA,IAAyB;AAAA,QAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,QAAZmD,KAAY,SAAZA,KAAY;AAChC,QAAIC,IAAI,GAAG5C,IAAI,CAAC4C,IAAL,CAAU7C,IAAI,CAACS,IAAf,EAAqB,QAArB,CAAX;AACA,wBACE;AACE,MAAA,GAAG,EAAEjB,IADP;AAEE,MAAA,KAAK,EAAEN,WAFT;AAGE,MAAA,KAAK,YAAKG,OAAO,CAACG,IAAD,EAAOC,KAAP,CAAZ,gBAA+B8C,WAAW,CAACK,KAAD,CAA1C;AAHP,oBAKE,gCAAC,QAAD,EAAcE,kBAAEC,OAAF,CAAUC,cAAV,CAAyBxD,IAAzB,EAA+BqD,IAA/B,CAAd,CALF,eAME;AAAK,MAAA,KAAK,EAAE;AAAExB,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB;AAAZ,OACGjC,OAAO,CAACG,IAAD,EAAOC,KAAP,CAAP,IAAwB6C,YAAY,EADvC,CANF,EASG,CAACD,IAAI,CAACY,MAAN,iBAAgB,6CAAMV,WAAW,CAACK,KAAD,CAAjB,CATnB,CADF;AAaD,GAfD,CAHF,EAmBElD,eAAEQ,GAAF,CAAM,iBAAN,EAAyBF,IAAzB,CAnBF,CATF;AAAA,CAD6B,CAAxB","sourcesContent":["import React, { useState } from 'react'\nimport _ from 'lodash/fp'\nimport F from 'futil'\nimport { withTheme } from '../utils/theme'\nimport { toNumber } from '../utils/format'\nimport { setDisplayName } from 'recompose'\nimport { observer } from 'mobx-react'\nimport { Flex } from '../greyVest'\nimport { contexturifyWithoutLoader } from '../utils/hoc'\n\nlet commonStyle = {\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  display: 'flex',\n  cursor: 'pointer',\n}\n\nexport let displayFn = (name, label) => (_.isString(label) ? label : name)\nexport let displayBlankFn = () => <i>Not Specified</i>\n\nexport let Cardinality = _.flow(\n  setDisplayName('Cardinality'),\n  observer\n)(({ node, tree }) =>\n  _.get('context.cardinality', node) ? (\n    <Flex\n      className=\"contexture-facet-cardinality\"\n      justifyContent=\"space-between\"\n    >\n      <div>\n        Showing{' '}\n        {toNumber(_.min([node.size || 10, _.size(node.context.options)]))} of{' '}\n        {toNumber(node.context.cardinality)}\n      </div>\n      {node.context.cardinality > (node.size || 10) && (\n        <div>\n          <a\n            onClick={() =>\n              tree.mutate(node.path, { size: (node.size || 10) + 10 })\n            }\n            style={{ cursor: 'pointer' }}\n          >\n            View More\n          </a>\n        </div>\n      )}\n    </Flex>\n  ) : null\n)\n\nexport let SelectAll = _.flow(\n  setDisplayName('SelectAll'),\n  observer,\n  withTheme\n)(({ node, tree, theme: { Checkbox } }) => {\n  let missingOptions = _.difference(\n    _.map('name', _.get('context.options', node)),\n    node.values\n  )\n  let allSelected = _.isEmpty(missingOptions)\n  return (\n    <label style={commonStyle}>\n      <Checkbox\n        checked={allSelected}\n        onChange={() => {\n          if (allSelected)\n            tree.mutate(node.path, {\n              values: [],\n            })\n          else\n            tree.mutate(node.path, {\n              values: node.values.concat(missingOptions),\n            })\n        }}\n      />\n      <div style={{ flex: 2, padding: '0 5px' }}>Select All Visible</div>\n    </label>\n  )\n})\n\nexport let FacetOptionsFilter = _.flow(\n  setDisplayName('FacetOptionsFilter'),\n  observer,\n  withTheme\n)(({ tree, node, theme: { TextInput, Button, ButtonGroup } }) => {\n  let [val, setVal] = useState(node.optionsFilter)\n  let buttonEnabled = val !== node.optionsFilter\n  let submit = () =>\n    buttonEnabled && tree.mutate(node.path, { optionsFilter: val })\n  return (\n    <ButtonGroup>\n      <TextInput\n        value={val}\n        onChange={e => {\n          setVal(e.target.value)\n        }}\n        onKeyPress={e => e.key === 'Enter' && submit()}\n        onBlur={submit}\n        placeholder=\"Search...\"\n      />\n      <Button primary={node.optionsFilter !== val} onClick={submit}>\n        Find\n      </Button>\n    </ButtonGroup>\n  )\n})\n\nexport let FacetCheckboxList = contexturifyWithoutLoader(\n  ({\n    tree,\n    node,\n    hide,\n    display = displayFn,\n    displayBlank = displayBlankFn,\n    formatCount,\n    theme: { Checkbox },\n  }) =>\n    _.flow(\n      _.partition(x => _.includes(x.name, node.values)),\n      _.flatten,\n      _.map(({ name, label, count }) => {\n        let lens = tree.lens(node.path, 'values')\n        return (\n          <label\n            key={name}\n            style={commonStyle}\n            title={`${display(name, label)} : ${formatCount(count)}`}\n          >\n            <Checkbox {...F.domLens.checkboxValues(name, lens)} />\n            <div style={{ flex: 2, padding: '0 5px' }}>\n              {display(name, label) || displayBlank()}\n            </div>\n            {!hide.counts && <div>{formatCount(count)}</div>}\n          </label>\n        )\n      })\n    )(_.get('context.options', node))\n)\n"],"file":"facet.js"}