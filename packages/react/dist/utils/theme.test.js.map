{"version":3,"sources":["../../src/utils/theme.test.js"],"names":["test","theme","A","B","expect","toEqual","C","_","reduce","mergeNestedTheme","undefined"],"mappings":";;AAAA;;AACA;;;;AAEAA,IAAI,CAAC,kBAAD,EAAqB,YAAM;AAC7B,MAAIC,KAAK,GAAG;AACVC,IAAAA,CAAC,EAAE,GADO;AAEVC,IAAAA,CAAC,EAAE,GAFO;AAGV,WAAO,KAHG;AAIV,WAAO,KAJG;AAKV,aAAS,OALC;AAMV,WAAO,KANG;AAOV,aAAS;AAPC,GAAZ;AASAC,EAAAA,MAAM,CAAC,6BAAiBH,KAAjB,EAAwB,GAAxB,CAAD,CAAN,CAAqCI,OAArC,CAA6C;AAC3CH,IAAAA,CAAC,EAAE,GADwC;AAE3CC,IAAAA,CAAC,EAAE,KAFwC;AAEjC;AACVG,IAAAA,CAAC,EAAE,KAHwC;AAGjC;AACV,WAAO,KAJoC;AAK3C,WAAO,KALoC;AAM3C,aAAS,OANkC;AAO3C,WAAO,KAPoC;AAQ3C,aAAS,OARkC;AAS3C,WAAO,OAToC,CAS3B;;AAT2B,GAA7C;AAWAF,EAAAA,MAAM,CAAC,6BAAiBH,KAAjB,EAAwB,GAAxB,CAAD,CAAN,CAAqCI,OAArC,CAA6C;AAC3CH,IAAAA,CAAC,EAAE,GADwC;AAE3CC,IAAAA,CAAC,EAAE,KAFwC;AAEjC;AACV,WAAO,KAHoC;AAI3C,WAAO,KAJoC;AAK3C,aAAS,OALkC;AAM3C,WAAO,OANoC;AAM3B;AAChB,aAAS;AAPkC,GAA7C;AASAC,EAAAA,MAAM,CAAC,6BAAiBH,KAAjB,EAAwB,GAAxB,CAAD,CAAN,CAAqCI,OAArC,CAA6CJ,KAA7C;AACAG,EAAAA,MAAM,CAACG,eAAEC,MAAF,CAASC,uBAAT,EAA2BR,KAA3B,EAAkC,CAAC,GAAD,EAAM,GAAN,CAAlC,CAAD,CAAN,CAAsDI,OAAtD,CAA8D;AAC5DH,IAAAA,CAAC,EAAE,GADyD;AAE5DC,IAAAA,CAAC,EAAE,OAFyD;AAEhD;AACZG,IAAAA,CAAC,EAAE,KAHyD;AAGlD;AACV,WAAO,KAJqD;AAK5D,WAAO,KALqD;AAM5D,aAAS,OANmD;AAO5D,WAAO,KAPqD;AAQ5D,aAAS,OARmD;AAS5D,WAAO,OATqD,CAS5C;;AAT4C,GAA9D;AAWAF,EAAAA,MAAM,CAAC,6BAAiBH,KAAjB,CAAD,CAAN,CAAgCI,OAAhC,CAAwCJ,KAAxC,EA1C6B,CA2C7B;;AACAG,EAAAA,MAAM,CAAC,8BAAD,CAAN,CAA2BC,OAA3B,CAAmCK,SAAnC;AACD,CA7CG,CAAJ","sourcesContent":["import { mergeNestedTheme } from './theme'\nimport _ from 'lodash/fp'\n\ntest('mergeNestedTheme', () => {\n  let theme = {\n    A: 'a',\n    B: 'b',\n    'A.B': 'a.b',\n    'A.C': 'a.c',\n    'A.C.B': 'a.c.b',\n    'B.B': 'b.b',\n    'B.B.B': 'b.b.b',\n  }\n  expect(mergeNestedTheme(theme, 'A')).toEqual({\n    A: 'a',\n    B: 'a.b', // <-- (changed)\n    C: 'a.c', // <--\n    'A.B': 'a.b',\n    'A.C': 'a.c',\n    'A.C.B': 'a.c.b',\n    'B.B': 'b.b',\n    'B.B.B': 'b.b.b',\n    'C.B': 'a.c.b', // <--\n  })\n  expect(mergeNestedTheme(theme, 'B')).toEqual({\n    A: 'a',\n    B: 'b.b', // <--\n    'A.B': 'a.b',\n    'A.C': 'a.c',\n    'A.C.B': 'a.c.b',\n    'B.B': 'b.b.b', // <--\n    'B.B.B': 'b.b.b',\n  })\n  expect(mergeNestedTheme(theme, 'C')).toEqual(theme)\n  expect(_.reduce(mergeNestedTheme, theme, ['A', 'C'])).toEqual({\n    A: 'a',\n    B: 'a.c.b', // <--<--\n    C: 'a.c', // <--\n    'A.B': 'a.b',\n    'A.C': 'a.c',\n    'A.C.B': 'a.c.b',\n    'B.B': 'b.b',\n    'B.B.B': 'b.b.b',\n    'C.B': 'a.c.b', // <--\n  })\n  expect(mergeNestedTheme(theme)).toEqual(theme)\n  // edge case: do we want this to equal {} instead?\n  expect(mergeNestedTheme()).toEqual(undefined)\n})\n"],"file":"theme.test.js"}