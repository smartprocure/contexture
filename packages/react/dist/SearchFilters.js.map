{"version":3,"sources":["../src/SearchFilters.js"],"names":["SearchTree","LabelledList","list","Component","F","mapIndexed","i","label","props","AddableFilterList","allowDuplicateFields","FiltersBox","Box","theme","displayName","BasicSearchFilters","setMode","trees","children","BasicFilters","DropdownItem","BuilderSearchFilters","BuilderFilters","SearchFilters","mode","QueryBuilder","_","flow","React","Children","toArray","map","propTypes","PropTypes","oneOf"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport PropTypes from 'prop-types'\nimport F from 'futil'\nimport { observer } from 'mobx-react'\nimport { Flex, QueryBuilder, FilterAdder, FilterList } from '.'\nimport { TreePauseButton } from './purgatory'\nimport { LinkButton, Icon, Popover, DropdownItem } from './greyVest'\nimport { withTheme } from './utils/theme'\n\nexport let SearchTree = () => {}\n\nlet LabelledList = ({ list, Component }) =>\n  F.mapIndexed(\n    ({ label, ...props }, i) => (\n      <React.Fragment key={i}>\n        {label && <h3>{label}</h3>}\n        <Component {...props} />\n      </React.Fragment>\n    ),\n    list\n  )\n\nexport let AddableFilterList = props => (\n  <>\n    <FilterList {...props} />\n    <FilterAdder {...props} uniqueFields={!props.allowDuplicateFields} />\n  </>\n)\n\nexport let FiltersBox = withTheme(({ theme: { Box }, ...props }) => (\n  <Box className=\"filter-list\">\n    <AddableFilterList {...props} />\n  </Box>\n))\nFiltersBox.displayName = 'FiltersBox'\n\nlet BasicSearchFilters = ({ setMode, trees, children, BasicFilters }) => (\n  <div>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <h1>Filters</h1>\n      <div>\n        <Popover\n          position=\"bottom right\"\n          trigger={\n            <DropdownItem>\n              <Icon icon=\"more_vert\" />\n            </DropdownItem>\n          }\n        >\n          <DropdownItem onClick={() => setMode('resultsOnly')}>\n            Hide Filters\n          </DropdownItem>\n          <TreePauseButton children={children} Component={DropdownItem} />\n          <DropdownItem onClick={() => setMode('builder')}>\n            Advanced Search Builder\n          </DropdownItem>\n        </Popover>\n      </div>\n    </Flex>\n    <LabelledList list={trees} Component={BasicFilters} />\n  </div>\n)\n\nlet BuilderSearchFilters = ({ setMode, trees, BuilderFilters }) => (\n  <div>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <h1>Filters</h1>\n      <LinkButton onClick={() => setMode('basic')}>\n        Back to Regular Search\n      </LinkButton>\n    </Flex>\n    <LabelledList list={trees} Component={BuilderFilters} />\n  </div>\n)\n\nlet SearchFilters = ({\n  mode,\n  setMode,\n  children, // pass allowDuplicateFields in children to override uniqueFields\n  BasicFilters = FiltersBox,\n  BuilderFilters = QueryBuilder,\n}) => {\n  let trees = _.flow(React.Children.toArray, _.map('props'))(children)\n  return mode === 'basic' ? (\n    <BasicSearchFilters {...{ trees, setMode, children, BasicFilters }} />\n  ) : mode === 'builder' ? (\n    <BuilderSearchFilters {...{ trees, setMode, BuilderFilters }} />\n  ) : null\n}\n\nSearchFilters.propTypes = {\n  mode: PropTypes.oneOf(['basic', 'builder', 'resultsOnly']),\n}\n\nexport default observer(SearchFilters)\n"],"file":"SearchFilters.js"}