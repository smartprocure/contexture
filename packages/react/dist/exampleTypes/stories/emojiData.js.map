{"version":3,"sources":["../../../src/exampleTypes/stories/emojiData.js"],"names":["number","typeDefault","bool","display","x","codePoint","F","whenExists","_","flow","split","map","parseInt","spread","String","fromCodePoint","schema","image","record","name","unified","non_qualified","sheet_x","sheet_y","short_name","short_names","category","sort_order","added_in","has_img_apple","has_img_google","has_img_twitter","has_img_facebook","text","texts","obsoletes","obsoleted_by","skin_variations","unkeyBy","skin_tone","pick"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;AACA,IAAIA,MAAM,GAAG;AAAEC,EAAAA,WAAW,EAAED;AAAf,CAAb;AACA,IAAIE,IAAI,GAAG;AAAED,EAAAA,WAAW,EAAE,MAAf;AAAuBE,EAAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,WAAKA,CAAC,GAAG,KAAH,GAAW,IAAjB;AAAA;AAAjC,CAAX;AACA,IAAIC,SAAS,GAAG;AACdJ,EAAAA,WAAW,EAAE,MADC;AAEdE,EAAAA,OAAO,EAAEG,kBAAEC,UAAF,CACPC,eAAEC,IAAF,CACED,eAAEE,KAAF,CAAQ,GAAR,CADF,EAEEF,eAAEG,GAAF,CAAM,UAAAP,CAAC;AAAA,WAAIQ,QAAQ,CAACR,CAAD,EAAI,EAAJ,CAAZ;AAAA,GAAP,CAFF,EAGEI,eAAEK,MAAF,CAASC,MAAM,CAACC,aAAhB,CAHF,CADO;AAFK,CAAhB;AAWA,IAAIC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLd,IAAAA,OAAO,EAAE,iBAACC,CAAD,EAAIc,MAAJ;AAAA,0BAAe,gCAAC,qBAAD;AAAW,QAAA,GAAG,EAAC,UAAf;AAA0B,QAAA,MAAM,EAAEA;AAAlC,QAAf;AAAA;AADJ,GADI;AAIXC,EAAAA,IAAI,EAAE;AAAElB,IAAAA,WAAW,EAAE;AAAf,GAJK;AAKXmB,EAAAA,OAAO,EAAEf,SALE;AAMXgB,EAAAA,aAAa,EAAEhB,SANJ;AAOXiB,EAAAA,OAAO,EAAE;AAAErB,IAAAA,WAAW,EAAE;AAAf,GAPE;AAQXsB,EAAAA,OAAO,EAAE;AAAEtB,IAAAA,WAAW,EAAE;AAAf,GARE;AASXuB,EAAAA,UAAU,EAAE;AAAEvB,IAAAA,WAAW,EAAE;AAAf,GATD;AAUXwB,EAAAA,WAAW,EAAE;AAAExB,IAAAA,WAAW,EAAE;AAAf,GAVF;AAWXyB,EAAAA,QAAQ,EAAE;AAAEzB,IAAAA,WAAW,EAAE;AAAf,GAXC;AAYX0B,EAAAA,UAAU,EAAE;AAAE1B,IAAAA,WAAW,EAAE;AAAf,GAZD;AAaX2B,EAAAA,QAAQ,EAAE;AAAE3B,IAAAA,WAAW,EAAE;AAAf,GAbC;AAcX4B,EAAAA,aAAa,EAAE3B,IAdJ;AAeX4B,EAAAA,cAAc,EAAE5B,IAfL;AAgBX6B,EAAAA,eAAe,EAAE7B,IAhBN;AAiBX8B,EAAAA,gBAAgB,EAAE9B,IAjBP;AAkBX+B,EAAAA,IAAI,EAAE;AAAEhC,IAAAA,WAAW,EAAE;AAAf,GAlBK;AAmBXiC,EAAAA,KAAK,EAAE;AAAEjC,IAAAA,WAAW,EAAE;AAAf,GAnBI;AAoBXkC,EAAAA,SAAS,EAAE9B,SApBA;AAqBX+B,EAAAA,YAAY,EAAE/B;AArBH,CAAb;AAuBAW,MAAM,CAACqB,eAAP,GAAyB;AACvBpC,EAAAA,WAAW,EAAE,OADU;AAEvBE,EAAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,WACRA,CAAC,iBACC,gCAAC,uBAAD;AACE,MAAA,IAAI,EAAEE,kBAAEgC,OAAF,CAAU,WAAV,EAAuBlC,CAAvB,CADR;AAEE,MAAA,MAAM;AACJmC,QAAAA,SAAS,EAAElC;AADP,SAEDG,eAAEgC,IAAF,CAAO,CAAC,OAAD,EAAU,SAAV,CAAP,EAA6BxB,MAA7B,CAFC;AAFR,MAFM;AAAA;AAFa,CAAzB;eAceA,M","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport F from 'futil'\nimport MemoryTable from '../../MemoryTable'\nimport EmojiIcon from '../../stories/EmojiIcon'\n\n// types\nlet number = { typeDefault: number }\nlet bool = { typeDefault: 'bool', display: x => (x ? 'Yes' : 'No') }\nlet codePoint = {\n  typeDefault: 'text',\n  display: F.whenExists(\n    _.flow(\n      _.split('-'),\n      _.map(x => parseInt(x, 16)),\n      _.spread(String.fromCodePoint)\n    )\n  ),\n}\n\nlet schema = {\n  image: {\n    display: (x, record) => <EmojiIcon set=\"facebook\" record={record} />,\n  },\n  name: { typeDefault: 'text' },\n  unified: codePoint,\n  non_qualified: codePoint,\n  sheet_x: { typeDefault: 'number' },\n  sheet_y: { typeDefault: 'number' },\n  short_name: { typeDefault: 'facet' },\n  short_names: { typeDefault: 'facet' },\n  category: { typeDefault: 'facet' },\n  sort_order: { typeDefault: 'number' },\n  added_in: { typeDefault: 'facet' },\n  has_img_apple: bool,\n  has_img_google: bool,\n  has_img_twitter: bool,\n  has_img_facebook: bool,\n  text: { typeDefault: 'facet' },\n  texts: { typeDefault: 'facet' },\n  obsoletes: codePoint,\n  obsoleted_by: codePoint,\n}\nschema.skin_variations = {\n  typeDefault: 'facet',\n  display: x =>\n    x && (\n      <MemoryTable\n        data={F.unkeyBy('skin_tone', x)}\n        fields={{\n          skin_tone: codePoint,\n          ..._.pick(['image', 'unified'], schema),\n        }}\n      />\n    ),\n}\n\nexport default schema\n"],"file":"emojiData.js"}