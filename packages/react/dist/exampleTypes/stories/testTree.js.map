{"version":3,"sources":["../../../src/exampleTypes/stories/testTree.js"],"names":["treeLens","_","curry","tree","path","prop","get","getNode","set","value","mutate","f","identity","facet","key","type","values","optionsFilter","context","options","name","count","bool","exists","date","from","to","query","field","titleText","tagsQuery","tags","number","min","max","geo","location","operator","radius","results","pageSize","page","response","_id","title","a","b","c","nested","startRecord","endRecord","totalRecords","dateHistogram","key_field","value_field","interval","entries","doc_count","avg","sum","maxDate","minDate","testTree","blob","lens","r","Obj","prototype","toString"],"mappings":"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","sourcesContent":["import { observable, set } from 'mobx'\nimport { action } from '@storybook/addon-actions'\nimport _ from 'lodash/fp'\n\n// Lifted from contexture-client since it's not exported\nlet treeLens = _.curry((tree, path, prop) => ({\n  get: () => _.get(prop, tree.getNode(path)),\n  set: value => tree.mutate(path, { [prop]: value }),\n}))\n\nexport default (f = _.identity) => {\n  let tree = observable({\n    facet: {\n      key: 'facet',\n      type: 'facet',\n      path: ['facet'],\n      values: [],\n      optionsFilter: '',\n      context: {\n        options: [\n          {\n            name: '',\n            count: 4,\n          },\n          {\n            name: 'Apple',\n            count: 15,\n          },\n          {\n            name: 'Blueberry',\n            count: 3,\n          },\n          {\n            name: 'Coconut',\n            count: 1,\n          },\n          {\n            name: 'Orange',\n            count: 8,\n          },\n          {\n            name: 'Grape',\n            count: '20',\n          },\n          {\n            name: 'Pear',\n            count: 5,\n          },\n          {\n            name: 'Strawberry',\n            count: 12,\n          },\n        ],\n      },\n    },\n    bool: {\n      key: 'bool',\n      value: null,\n      path: ['bool'],\n    },\n    exists: {\n      key: 'exists',\n      value: null,\n      path: ['exists'],\n    },\n    date: {\n      key: 'date',\n      path: ['date'],\n      from: '2011-01-01T05:00:00.000Z',\n      to: '2019-09-12T12:07:20.000Z',\n    },\n    query: {\n      key: 'searchQuery',\n      path: ['query'],\n      type: 'query',\n      field: 'title',\n      query: '',\n    },\n    titleText: {\n      key: 'titleText',\n      path: ['titleText'],\n      type: 'text',\n      field: 'title',\n      value: '',\n    },\n    tagsQuery: {\n      key: 'tagsQuery',\n      path: ['tagsQuery'],\n      type: 'tagsQuery',\n      field: 'title',\n      tags: [],\n    },\n    number: {\n      key: 'searchNumber',\n      path: ['number'],\n      type: 'number',\n      field: 'metaScore',\n      min: 0,\n      max: 100,\n    },\n    geo: {\n      key: 'geoSearch',\n      path: ['geo'],\n      type: 'geo',\n      location: '',\n      operator: 'within',\n      radius: 1,\n    },\n    results: {\n      key: 'results',\n      path: ['results'],\n      type: 'results',\n      pageSize: 6,\n      page: 1,\n      context: {\n        response: {\n          count: 1,\n          results: [\n            {\n              _id: '123',\n              title: 'Some Result',\n              a: 1,\n              b: 2,\n              c: 3,\n              nested: {\n                value: 4,\n              },\n            },\n            {\n              _id: '124',\n              title: 'Some Other Result',\n              a: 1,\n              b: 4,\n              c: 3,\n              nested: {\n                value: 5,\n              },\n            },\n            {\n              _id: '135',\n              title: 'A Different Result',\n              a: 1,\n              b: 2,\n              c: 3,\n              nested: {\n                value: 6,\n              },\n            },\n          ],\n          startRecord: 1,\n          endRecord: 1,\n          totalRecords: 3,\n        },\n      },\n    },\n    dateHistogram: {\n      key: 'releases',\n      path: ['releases'],\n      type: 'dateHistogram',\n      key_field: 'released',\n      value_field: 'imdbVotes',\n      interval: '3650d',\n      context: {\n        entries: [\n          {\n            key: 0,\n            doc_count: 1,\n            count: 1,\n            min: 625633,\n            max: 625633,\n            avg: 625633,\n            sum: 625633,\n          },\n          {\n            key: 315360000000,\n            doc_count: 3,\n            count: 3,\n            min: 74450,\n            max: 557731,\n            avg: 355868.3333333333,\n            sum: 1067605,\n          },\n          {\n            key: 630720000000,\n            doc_count: 2,\n            count: 2,\n            min: 82360,\n            max: 376362,\n            avg: 229361,\n            sum: 458722,\n          },\n          {\n            key: 946080000000,\n            doc_count: 4,\n            count: 4,\n            min: 28087,\n            max: 395463,\n            avg: 275019.25,\n            sum: 1100077,\n          },\n          {\n            key: 1261440000000,\n            doc_count: 1,\n            count: 1,\n            min: 264551,\n            max: 264551,\n            avg: 264551,\n            sum: 264551,\n          },\n        ],\n        maxDate: null,\n        minDate: null,\n      },\n    },\n  })\n  let testTree = {\n    getNode: ([path]) => tree[path],\n    mutate: _.curry(([path], blob) => {\n      action('mutate')(path, blob)\n      set(tree[path], blob)\n    }),\n  }\n  testTree.lens = treeLens(testTree)\n\n  let r = f(testTree)\n\n  let Obj = function () {\n    return r\n  }\n  Obj.prototype.toString = () => 'THIS IS A CONTEXTURE TEST TREE'\n\n  return new Obj()\n}\n"],"file":"testTree.js"}