{"version":3,"sources":["../../src/exampleTypes/Date.js"],"names":["allRollingOpts","type","range","endOfDay","date","endOf","toDate","DateComponent","tree","node","excludeRollingRanges","theme","DateInput","RadioList","Select","React","useState","dateType","setDateType","rollingOpts","_","reject","opt","includes","F","autoLabelOptions","marginBottom","value","mutate","path","from","to","justifyContent","alignItems","e","target","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","map","label","startCase","selected"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Flex } from '../greyVest'\nimport { contexturifyWithoutLoader } from '../utils/hoc'\nimport F from 'futil'\nimport _ from 'lodash/fp'\nimport moment from 'moment'\n\nlet allRollingOpts = [\n  { type: 'all', range: 'allDates' },\n  { type: 'all', range: 'allPastDates' },\n  { type: 'all', range: 'allFutureDates' },\n  { type: 'past', range: 'last3Days' },\n  { type: 'past', range: 'last7Days' },\n  { type: 'past', range: 'last30Days' },\n  { type: 'past', range: 'last90Days' },\n  { type: 'past', range: 'last180Days' },\n  { type: 'past', range: 'last12Months' },\n  { type: 'past', range: 'last15Months' },\n  { type: 'past', range: 'last18Months' },\n  { type: 'past', range: 'last24Months' },\n  { type: 'past', range: 'last36Months' },\n  { type: 'past', range: 'last48Months' },\n  { type: 'past', range: 'last60Months' },\n  { type: 'past', range: 'lastCalendarMonth' },\n  { type: 'past', range: 'lastCalendarQuarter' },\n  { type: 'past', range: 'lastCalendarYear' },\n  { type: 'present', range: 'thisCalendarMonth' },\n  { type: 'present', range: 'thisCalendarQuarter' },\n  { type: 'present', range: 'thisCalendarYear' },\n  { type: 'future', range: 'nextCalendarMonth' },\n  { type: 'future', range: 'nextCalendarQuarter' },\n  { type: 'future', range: 'nextCalendarYear' },\n  { type: 'future', range: 'next30Days' },\n  { type: 'future', range: 'next60Days' },\n  { type: 'future', range: 'next90Days' },\n  { type: 'future', range: 'next6Months' },\n  { type: 'future', range: 'next12Months' },\n  { type: 'future', range: 'next24Months' },\n  { type: 'future', range: 'next36Months' },\n]\n\nlet endOfDay = date => moment(date).endOf('day').toDate()\n\nlet DateComponent = ({\n  tree,\n  node,\n  excludeRollingRanges = [],\n  theme: { DateInput, RadioList, Select },\n}) => {\n  let [dateType, setDateType] = React.useState(\n    node.range === 'exact' || !node.range ? 'exact' : 'rolling'\n  )\n\n  let rollingOpts = _.reject(\n    opt => _.includes(opt.type, excludeRollingRanges),\n    allRollingOpts\n  )\n\n  return (\n    <div>\n      <RadioList\n        options={F.autoLabelOptions(['exact', 'rolling'])}\n        value={dateType}\n        style={{ marginBottom: 10 }}\n        onChange={value => {\n          tree.mutate(\n            node.path,\n            value === 'exact'\n              ? { range: 'exact', from: null, to: null }\n              : { range: '', from: null, to: null }\n          )\n          setDateType(value)\n        }}\n      />\n      {dateType === 'exact' && (\n        <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n          <DateInput\n            value={node.from}\n            onChange={date =>\n              tree.mutate(node.path, { range: 'exact', from: date })\n            }\n          />\n          <div>-</div>\n          <DateInput\n            value={node.to}\n            onChange={date =>\n              tree.mutate(node.path, { range: 'exact', to: endOfDay(date) })\n            }\n          />\n        </Flex>\n      )}\n      {dateType === 'rolling' && (\n        <Select\n          value={node.range}\n          onChange={e =>\n            tree.mutate(node.path, {\n              range: e.target.value,\n              timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n            })\n          }\n          options={F.map(\n            ({ range }) => ({\n              label: _.startCase(range),\n              value: range,\n              selected: node.range === range,\n            }),\n            rollingOpts\n          )}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default contexturifyWithoutLoader(DateComponent)\n"],"file":"Date.js"}