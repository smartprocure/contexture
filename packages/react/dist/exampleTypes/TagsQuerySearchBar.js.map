{"version":3,"sources":["../../src/exampleTypes/TagsQuerySearchBar.js"],"names":["searchBarStyle","overflow","searchBarBoxStyle","padding","flex","inputStyle","border","buttonStyle","boxShadow","fontSize","maxHeight","AnimatedButton","disabled","style","className","props","backgroundColor","animationDuration","SearchButton","tree","resultsPath","searchButtonProps","getNode","markedForUpdate","triggerUpdate","SearchBar","node","actionWrapper","collapse","React","useState","F","on","off","children","TagsInput","view","_","isEmpty","tags","Tags","ExpandableTagsInput","disableAutoUpdate","flow","observer","withNode"],"mappings":"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","sourcesContent":["import React from 'react'\nimport F from 'futil'\nimport _ from 'lodash/fp'\nimport { observer } from 'mobx-react'\nimport OutsideClickHandler from 'react-outside-click-handler'\nimport { withNode } from '../utils/hoc'\nimport { Box, ButtonGroup, Button } from '../greyVest'\nimport ExpandableTagsInput, { Tags } from '../greyVest/ExpandableTagsInput'\nimport ExpandableTagsQuery from './ExpandableTagsQuery'\n\nlet searchBarStyle = {\n  overflow: 'visible', // for the search button animation\n}\n\nlet searchBarBoxStyle = {\n  padding: '8px 10px',\n  flex: 1,\n}\n\nlet inputStyle = {\n  border: 'none',\n}\n\nlet buttonStyle = {\n  boxShadow: '0 2px 10px 0 rgba(39, 44, 65, 0.1)',\n  fontSize: 18,\n  maxHeight: 56,\n}\n\nlet AnimatedButton = ({ disabled, style, className, ...props }) => (\n  <Button\n    className={`${disabled ? 'disabled' : 'animated pulse infinite'} ${\n      className || ''\n    }`}\n    // BG Color is 50% white + primary button background, replacing 50% opacity\n    style={{\n      ...style,\n      ...(disabled ? { backgroundColor: '#80BBEF' } : {}),\n      animationDuration: '500ms',\n    }}\n    primary\n    {...props}\n  />\n)\n\nlet SearchButton = observer(({ tree, resultsPath, searchButtonProps }) => (\n  <AnimatedButton\n    disabled={!tree.getNode(resultsPath).markedForUpdate}\n    onClick={tree.triggerUpdate}\n    style={buttonStyle}\n    {...searchButtonProps}\n  >\n    Search\n  </AnimatedButton>\n))\n\nlet SearchBar = ({\n  tree,\n  node,\n  resultsPath,\n  actionWrapper,\n  searchButtonProps,\n}) => {\n  let collapse = React.useState(true)\n  return (\n    <OutsideClickHandler\n      onOutsideClick={() => {\n        F.on(collapse)()\n      }}\n    >\n      <ButtonGroup style={searchBarStyle}>\n        <Box style={searchBarBoxStyle} onClick={F.off(collapse)}>\n          <ExpandableTagsQuery\n            {...{ tree, node, collapse, actionWrapper }}\n            onAddTag={F.off(collapse)}\n            Loader={({ children }) => <div>{children}</div>}\n            style={inputStyle}\n            theme={{\n              TagsInput:\n                F.view(collapse) && !_.isEmpty(node.tags)\n                  ? Tags\n                  : ExpandableTagsInput,\n            }}\n            autoFocus\n          />\n        </Box>\n        {tree.disableAutoUpdate && (\n          <SearchButton\n            tree={tree}\n            resultsPath={resultsPath}\n            searchButtonProps={searchButtonProps}\n          />\n        )}\n      </ButtonGroup>\n    </OutsideClickHandler>\n  )\n}\n\nexport default _.flow(observer, withNode)(SearchBar)\n"],"file":"TagsQuerySearchBar.js"}