{"version":3,"sources":["../../src/exampleTypes/CheckableResultTable.stories.js"],"names":["module","addDecorator","add","selected","React","useState","JSON","stringify","F","view","_id","title","nested","label","display","x","value","selectedValues","onChange"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEA,uBAAU,mCAAV,EAA+CA,MAA/C,EACGC,YADH,CACgB,6BAAY,UAAZ,CADhB,EAEGC,GAFH,CAEO,oBAFP,EAE6B,YAAM;AAC/B,MAAIC,QAAQ,GAAGC,kBAAMC,QAAN,CAAe,EAAf,CAAf;;AACA,sBACE,2DACaC,IAAI,CAACC,SAAL,CAAeC,kBAAEC,IAAF,CAAON,QAAP,CAAf,CADb,eAEE,gCAAC,sBAAD;AACE,IAAA,IAAI,EAAE,2BADR;AAEE,IAAA,IAAI,EAAE,CAAC,SAAD,CAFR;AAGE,IAAA,QAAQ,EAAEA,QAHZ;AAIE,IAAA,QAAQ,EAAC,KAJX;AAKE,IAAA,MAAM,EAAE;AACNO,MAAAA,GAAG,EAAE,IADC;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAN;AAAA;AAAnC;AAHF;AALV,IAFF,CADF;AAgBD,CApBH,EAqBGd,GArBH,CAqBO,oCArBP,EAqB6C,YAAM;AAAA,wBACdE,kBAAMC,QAAN,CAAe,EAAf,CADc;AAAA;AAAA,MAC1CY,cAD0C;AAAA,MAC1BC,QAD0B;;AAE/C,sBACE,2DACaZ,IAAI,CAACC,SAAL,CAAeU,cAAf,CADb,eAEE,gCAAC,sBAAD;AACE,IAAA,IAAI,EAAE,2BADR;AAEE,IAAA,IAAI,EAAE,CAAC,SAAD;AAFR,KAGM;AAAEA,IAAAA,cAAc,EAAdA,cAAF;AAAkBC,IAAAA,QAAQ,EAARA;AAAlB,GAHN;AAIE,IAAA,QAAQ,EAAC,KAJX;AAKE,IAAA,MAAM,EAAE;AACNR,MAAAA,GAAG,EAAE,IADC;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAN;AAAA;AAAnC;AAHF;AALV,KAFF,CADF;AAgBD,CAvCH","sourcesContent":["import F from 'futil'\nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport TestTree from './stories/testTree'\nimport ThemePicker from '../stories/themePicker'\nimport { CheckableResultTable } from '.'\n\nstoriesOf('ExampleTypes|CheckableResultTable', module)\n  .addDecorator(ThemePicker('greyVest'))\n  .add('With selected prop', () => {\n    let selected = React.useState([])\n    return (\n      <div>\n        Selected: {JSON.stringify(F.view(selected))}\n        <CheckableResultTable\n          tree={TestTree()}\n          path={['results']}\n          selected={selected}\n          getValue=\"_id\"\n          fields={{\n            _id: true,\n            title: true,\n            nested: { label: 'Nested Value', display: x => x.value },\n          }}\n        />\n      </div>\n    )\n  })\n  .add('With selectedValues/onChange props', () => {\n    let [selectedValues, onChange] = React.useState([])\n    return (\n      <div>\n        Selected: {JSON.stringify(selectedValues)}\n        <CheckableResultTable\n          tree={TestTree()}\n          path={['results']}\n          {...{ selectedValues, onChange }}\n          getValue=\"_id\"\n          fields={{\n            _id: true,\n            title: true,\n            nested: { label: 'Nested Value', display: x => x.value },\n          }}\n        />\n      </div>\n    )\n  })\n"],"file":"CheckableResultTable.stories.js"}