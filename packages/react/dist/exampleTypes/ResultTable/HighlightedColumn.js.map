{"version":3,"sources":["../../../src/exampleTypes/ResultTable/HighlightedColumn.js"],"names":["labelForField","schema","field","_","getOr","find","HighlightedColumn","node","results","result","additionalFields","Cell","theme","Modal","Table","viewModal","React","useState","isEmpty","map","label","value","__html","e","preventDefault","F","on","size","flow","observer","withTheme"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAIA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,KAAT;AAAA,SAClBC,eAAEC,KAAF,CAAQF,KAAR,EAAe,OAAf,EAAwBC,eAAEE,IAAF,CAAO;AAAEH,IAAAA,KAAK,EAALA;AAAF,GAAP,EAAkBD,MAAlB,CAAxB,CADkB;AAAA,CAApB;;AAGA,IAAIK,iBAAiB,GAAG,SAApBA,iBAAoB,OAOlB;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,0BALJC,OAKI;AAAA,MALJA,OAKI,6BALML,eAAEM,MAAF,CAAS,OAAT,EAAkB,wBAAWF,IAAX,CAAlB,CAKN;AAAA,mCAJJG,gBAII;AAAA,MAJJA,gBAII,sCAJeP,eAAEM,MAAF,CAAS,0BAAT,EAAqCD,OAArC,CAIf;AAAA,MAHJP,MAGI,QAHJA,MAGI;AAAA,uBAFJU,IAEI;AAAA,MAFJA,IAEI,0BAFG,IAEH;AAAA,wBADJC,KACI;AAAA,MADKC,KACL,cADKA,KACL;AAAA,MADYC,KACZ,cADYA,KACZ;;AACJ,MAAIC,SAAS,GAAGC,kBAAMC,QAAN,CAAe,KAAf,CAAhB;;AACA,SAAOd,eAAEe,OAAF,CAAUR,gBAAV,iBACL,gCAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,IADK,gBAGL,gCAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,kBACE,gCAAC,KAAD;AAAO,IAAA,IAAI,EAAEK;AAAb,kBACE,oEADF,eAEE,gCAAC,KAAD,qBACE,+CACGZ,eAAEgB,GAAF,CACC;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,KAAV,SAAUA,KAAV;AAAA,wBACE;AAAI,MAAA,GAAG,EAAED;AAAT,oBACE,4CAAKpB,aAAa,CAACC,MAAD,EAASmB,KAAT,CAAlB,CADF,eAEE;AAAI,MAAA,uBAAuB,EAAE;AAAEE,QAAAA,MAAM,EAAED;AAAV;AAA7B,MAFF,CADF;AAAA,GADD,EAOCX,gBAPD,CADH,CADF,CAFF,CADF,eAiBE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAE,iBAAAa,CAAC,EAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,CAAC,CAACC,EAAF,CAAKX,SAAL;AACD;AALH,iBAOWZ,eAAEwB,IAAF,CAAOjB,gBAAP,CAPX,oBAjBF,CAHF;AA+BD,CAxCD;;eA0CeP,eAAEyB,IAAF,CAAOC,mBAAP,EAAiBC,gBAAjB,EAA4BxB,iBAA5B,C","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport * as F from 'futil'\nimport { observer } from 'mobx-react'\nimport { getResults } from '../../utils/schema'\nimport { withTheme } from '../../utils/theme'\n\nlet labelForField = (schema, field) =>\n  _.getOr(field, 'label', _.find({ field }, schema))\n\nlet HighlightedColumn = ({\n  node,\n  results = _.result('slice', getResults(node)),\n  additionalFields = _.result('0.additionalFields.slice', results),\n  schema,\n  Cell = 'td',\n  theme: { Modal, Table },\n}) => {\n  let viewModal = React.useState(false)\n  return _.isEmpty(additionalFields) ? (\n    <Cell key=\"additionalFields\" />\n  ) : (\n    <Cell key=\"additionalFields\">\n      <Modal open={viewModal}>\n        <h3>Other Matching Fields</h3>\n        <Table>\n          <tbody>\n            {_.map(\n              ({ label, value }) => (\n                <tr key={label}>\n                  <td>{labelForField(schema, label)}</td>\n                  <td dangerouslySetInnerHTML={{ __html: value }} />\n                </tr>\n              ),\n              additionalFields\n            )}\n          </tbody>\n        </Table>\n      </Modal>\n      <button\n        className=\"gv-link-button\"\n        onClick={e => {\n          e.preventDefault()\n          F.on(viewModal)()\n        }}\n      >\n        Matched {_.size(additionalFields)} other field(s)\n      </button>\n    </Cell>\n  )\n}\n\nexport default _.flow(observer, withTheme)(HighlightedColumn)\n"],"file":"HighlightedColumn.js"}