{"version":3,"sources":["../../../src/exampleTypes/ResultTable/index.js"],"names":["getIncludes","schema","node","F","when","_","isEmpty","map","include","Tr","props","omit","ResultTable","fields","infer","path","criteria","tree","NoResultsComponent","IntroComponent","Row","getRowKey","mapNodeToProps","pageSizeOptions","stickyFields","footerStyle","Table","theme","Error","mutate","hasResults","get","flow","merge","applyDefaults","values","orderBy","includes","isIncluded","x","field","visibleFields","find","compact","hiddenFields","reject","headerProps","addOptions","addFilter","add","updating","mapIndexed","i","contains","length","pageSize","markedForUpdate","PagedResultTable"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport * as F from 'futil'\nimport { fieldsToOptions } from '../../FilterAdder'\nimport { contexturify } from '../../utils/hoc'\nimport { applyDefaults, inferSchema } from '../../utils/schema'\nimport { newNodeFromField } from '../../utils/search'\nimport Header from './Header'\nimport TableBody from './TableBody'\nimport HighlightedColumnHeader from './HighlightedColumnHeader'\nimport ResultTableFooter from './ResultTableFooter'\n\nlet getIncludes = (schema, node) =>\n  F.when(_.isEmpty, _.map('field', schema))(node.include)\n\nlet Tr = props => (\n  <tr\n    {..._.omit(['record', 'fields', 'visibleFields', 'hiddenFields'], props)}\n  />\n)\n\nlet ResultTable = ({\n  fields,\n  infer,\n  path,\n  criteria,\n  node = {},\n  tree,\n  NoResultsComponent = 'No Results Found',\n  IntroComponent = null, // Initial component to be shown instead of the grid when no data has been loaded\n  Row = Tr, // accept a custom Row component so we can do fancy expansion things\n  getRowKey, // allow passing a custom function to generate unique row key\n  mapNodeToProps = () => ({}),\n  pageSizeOptions, // an array of options to set the # of rows per page (default [20, 50, 100, 250])\n  stickyFields,\n  footerStyle,\n  theme: { Table },\n}) => {\n  // If there are no fields, we won't render anything. This is most definitely a\n  // user error when it happens\n  if (_.isEmpty(fields) && !infer) throw new Error('Fields are empty')\n  // From Theme/Components\n  let mutate = tree.mutate(path)\n  // Account for all providers here (memory provider has results with no response parent)\n  let hasResults =\n    !!_.get('context.response.results.length', node) ||\n    !!_.get('context.results.length', node)\n  // NOTE infer + add columns does not work together (except for anything explicitly passed in)\n  //   When removing a field, it's not longer on the record, so infer can't pick it up since it runs per render\n  let schema = _.flow(\n    _.merge(infer && inferSchema(node)),\n    applyDefaults,\n    _.values,\n    _.orderBy('order', 'desc')\n  )(fields)\n  let includes = getIncludes(schema, node)\n  let isIncluded = x => _.includes(x.field, includes)\n  let visibleFields = _.flow(\n    _.map(field => _.find({ field }, schema)),\n    _.compact\n  )(includes)\n  let hiddenFields = _.reject(isIncluded, schema)\n\n  let headerProps = {\n    mapNodeToProps,\n    fields,\n    visibleFields,\n    includes,\n    addOptions: fieldsToOptions(hiddenFields),\n    addFilter: field => tree.add(criteria, newNodeFromField({ field, fields })),\n    tree,\n    node,\n    mutate,\n    criteria,\n  }\n  if (!node.updating && hasResults) {\n    return (\n      <>\n        <Table>\n          <thead>\n            <tr>\n              {F.mapIndexed(\n                (x, i) => (\n                  <Header\n                    key={x.field}\n                    field={x}\n                    sticky={_.contains(stickyFields, x.field)}\n                    lastOne={i === visibleFields.length - 1}\n                    {...headerProps}\n                  />\n                ),\n                visibleFields\n              )}\n              <HighlightedColumnHeader node={node} />\n            </tr>\n          </thead>\n          <TableBody\n            {...{\n              node,\n              fields,\n              visibleFields,\n              hiddenFields,\n              schema,\n              Row,\n              getRowKey,\n              stickyFields,\n            }}\n          />\n        </Table>\n        {node.pageSize > 0 && (\n          <div\n            className=\"gv-table-footer\"\n            style={footerStyle}\n          >\n            <ResultTableFooter {...{ tree, node, path, pageSizeOptions }} />\n          </div>\n        )}\n      </>\n    )\n  }\n  if (!node.markedForUpdate && !node.updating && !hasResults) {\n    return NoResultsComponent\n  }\n  return IntroComponent\n}\n\nexport let PagedResultTable = contexturify(ResultTable)\nexport default PagedResultTable\n"],"file":"index.js"}