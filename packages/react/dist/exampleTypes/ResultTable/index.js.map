{"version":3,"sources":["../../../src/exampleTypes/ResultTable/index.js"],"names":["getIncludes","schema","node","F","when","_","isEmpty","map","include","Tr","props","omit","ResultTable","fields","infer","path","criteria","tree","NoResultsComponent","IntroComponent","Row","getRowKey","mapNodeToProps","pageSizeOptions","stickyFields","Table","theme","Error","mutate","hasResults","get","flow","merge","applyDefaults","values","orderBy","includes","isIncluded","x","field","visibleFields","find","compact","hiddenFields","reject","headerProps","addOptions","addFilter","add","updating","mapIndexed","contains","pageSize","background","width","position","bottom","left","zIndex","boxShadow","markedForUpdate","PagedResultTable"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAIA,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,IAAT;AAAA,SAChBC,CAAC,CAACC,IAAF,CAAOC,eAAEC,OAAT,EAAkBD,eAAEE,GAAF,CAAM,OAAN,EAAeN,MAAf,CAAlB,EAA0CC,IAAI,CAACM,OAA/C,CADgB;AAAA,CAAlB;;AAGA,IAAIC,EAAE,GAAG,SAALA,EAAK,CAAAC,KAAK;AAAA,sBACZ,sCACML,eAAEM,IAAF,CAAO,CAAC,QAAD,EAAW,QAAX,EAAqB,eAArB,EAAsC,cAAtC,CAAP,EAA8DD,KAA9D,CADN,CADY;AAAA,CAAd;;AAMA,IAAIE,WAAW,GAAG,SAAdA,WAAc,OAeZ;AAAA,MAdJC,MAcI,QAdJA,MAcI;AAAA,MAbJC,KAaI,QAbJA,KAaI;AAAA,MAZJC,IAYI,QAZJA,IAYI;AAAA,MAXJC,QAWI,QAXJA,QAWI;AAAA,uBAVJd,IAUI;AAAA,MAVJA,IAUI,0BAVG,EAUH;AAAA,MATJe,IASI,QATJA,IASI;AAAA,mCARJC,kBAQI;AAAA,MARJA,kBAQI,sCARiB,kBAQjB;AAAA,iCAPJC,cAOI;AAAA,MAPJA,cAOI,oCAPa,IAOb;AAAA,sBANJC,GAMI;AAAA,MANJA,GAMI,yBANEX,EAMF;AAAA,MALJY,SAKI,QALJA,SAKI;AAAA,iCAJJC,cAII;AAAA,MAJJA,cAII,oCAJa;AAAA,WAAO,EAAP;AAAA,GAIb;AAAA,MAHJC,eAGI,QAHJA,eAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADKC,KACL,QADJC,KACI,CADKD,KACL;AACJ;AACA;AACA,MAAIpB,eAAEC,OAAF,CAAUO,MAAV,KAAqB,CAACC,KAA1B,EAAiC,MAAM,IAAIa,KAAJ,CAAU,kBAAV,CAAN,CAH7B,CAIJ;;AACA,MAAIC,MAAM,GAAGX,IAAI,CAACW,MAAL,CAAYb,IAAZ,CAAb,CALI,CAMJ;;AACA,MAAIc,UAAU,GACZ,CAAC,CAACxB,eAAEyB,GAAF,CAAM,iCAAN,EAAyC5B,IAAzC,CAAF,IACA,CAAC,CAACG,eAAEyB,GAAF,CAAM,wBAAN,EAAgC5B,IAAhC,CAFJ,CAPI,CAUJ;AACA;;AACA,MAAID,MAAM,GAAGI,eAAE0B,IAAF,CACX1B,eAAE2B,KAAF,CAAQlB,KAAK,IAAI,yBAAYZ,IAAZ,CAAjB,CADW,EAEX+B,qBAFW,EAGX5B,eAAE6B,MAHS,EAIX7B,eAAE8B,OAAF,CAAU,OAAV,EAAmB,MAAnB,CAJW,EAKXtB,MALW,CAAb;;AAMA,MAAIuB,QAAQ,GAAGpC,WAAW,CAACC,MAAD,EAASC,IAAT,CAA1B;;AACA,MAAImC,UAAU,GAAG,SAAbA,UAAa,CAAAC,CAAC;AAAA,WAAIjC,eAAE+B,QAAF,CAAWE,CAAC,CAACC,KAAb,EAAoBH,QAApB,CAAJ;AAAA,GAAlB;;AACA,MAAII,aAAa,GAAGnC,eAAE0B,IAAF,CAClB1B,eAAEE,GAAF,CAAM,UAAAgC,KAAK;AAAA,WAAIlC,eAAEoC,IAAF,CAAO;AAAEF,MAAAA,KAAK,EAALA;AAAF,KAAP,EAAkBtC,MAAlB,CAAJ;AAAA,GAAX,CADkB,EAElBI,eAAEqC,OAFgB,EAGlBN,QAHkB,CAApB;;AAIA,MAAIO,YAAY,GAAGtC,eAAEuC,MAAF,CAASP,UAAT,EAAqBpC,MAArB,CAAnB;;AAEA,MAAI4C,WAAW,GAAG;AAChBvB,IAAAA,cAAc,EAAdA,cADgB;AAEhBT,IAAAA,MAAM,EAANA,MAFgB;AAGhB2B,IAAAA,aAAa,EAAbA,aAHgB;AAIhBJ,IAAAA,QAAQ,EAARA,QAJgB;AAKhBU,IAAAA,UAAU,EAAE,kCAAgBH,YAAhB,CALI;AAMhBI,IAAAA,SAAS,EAAE,mBAAAR,KAAK;AAAA,aAAItB,IAAI,CAAC+B,GAAL,CAAShC,QAAT,EAAmB,8BAAiB;AAAEuB,QAAAA,KAAK,EAALA,KAAF;AAAS1B,QAAAA,MAAM,EAANA;AAAT,OAAjB,CAAnB,CAAJ;AAAA,KANA;AAOhBI,IAAAA,IAAI,EAAJA,IAPgB;AAQhBf,IAAAA,IAAI,EAAJA,IARgB;AAShB0B,IAAAA,MAAM,EAANA,MATgB;AAUhBZ,IAAAA,QAAQ,EAARA;AAVgB,GAAlB;;AAYA,MAAI,CAACd,IAAI,CAAC+C,QAAN,IAAkBpB,UAAtB,EAAkC;AAChC,wBACE,+EACE,gCAAC,KAAD,qBACE,4DACE,4CACG1B,CAAC,CAAC+C,UAAF,CACC,UAAAZ,CAAC;AAAA,0BACC,gCAAC,kBAAD;AACE,QAAA,GAAG,EAAEA,CAAC,CAACC,KADT;AAEE,QAAA,KAAK,EAAED,CAFT;AAGE,QAAA,MAAM,EAAEjC,eAAE8C,QAAF,CAAW3B,YAAX,EAAyBc,CAAC,CAACC,KAA3B;AAHV,SAIMM,WAJN,EADD;AAAA,KADF,EASCL,aATD,CADH,eAYE,gCAAC,mCAAD;AAAyB,MAAA,IAAI,EAAEtC;AAA/B,MAZF,CADF,CADF,eAiBE,gCAAC,qBAAD,EACM;AACFA,MAAAA,IAAI,EAAJA,IADE;AAEFW,MAAAA,MAAM,EAANA,MAFE;AAGF2B,MAAAA,aAAa,EAAbA,aAHE;AAIFG,MAAAA,YAAY,EAAZA,YAJE;AAKF1C,MAAAA,MAAM,EAANA,MALE;AAMFmB,MAAAA,GAAG,EAAHA,GANE;AAOFC,MAAAA,SAAS,EAATA,SAPE;AAQFG,MAAAA,YAAY,EAAZA;AARE,KADN,CAjBF,CADF,EA+BGtB,IAAI,CAACkD,QAAL,GAAgB,CAAhB,iBACC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,MADP;AAELC,QAAAA,KAAK,EAAE,qBAFF;AAGLC,QAAAA,QAAQ,EAAE,QAHL;AAILC,QAAAA,MAAM,EAAE,CAJH;AAKLC,QAAAA,IAAI,EAAE,MALD;AAMLC,QAAAA,MAAM,EAAE,EANH;AAOLC,QAAAA,SAAS,EAAE;AAPN;AADT,oBAWE,gCAAC,6BAAD,EAAuB;AAAE1C,MAAAA,IAAI,EAAJA,IAAF;AAAQf,MAAAA,IAAI,EAAJA,IAAR;AAAca,MAAAA,IAAI,EAAJA,IAAd;AAAoBQ,MAAAA,eAAe,EAAfA;AAApB,KAAvB,CAXF,CAhCJ,CADF;AAiDD;;AACD,MAAI,CAACrB,IAAI,CAAC0D,eAAN,IAAyB,CAAC1D,IAAI,CAAC+C,QAA/B,IAA2C,CAACpB,UAAhD,EAA4D;AAC1D,WAAOX,kBAAP;AACD;;AACD,SAAOC,cAAP;AACD,CA5GD;;AA8GO,IAAI0C,gBAAgB,GAAG,uBAAajD,WAAb,CAAvB;;eACQiD,gB","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport * as F from 'futil'\nimport { fieldsToOptions } from '../../FilterAdder'\nimport { contexturify } from '../../utils/hoc'\nimport { applyDefaults, inferSchema } from '../../utils/schema'\nimport { newNodeFromField } from '../../utils/search'\nimport Header from './Header'\nimport TableBody from './TableBody'\nimport HighlightedColumnHeader from './HighlightedColumnHeader'\nimport ResultTableFooter from './ResultTableFooter'\n\nlet getIncludes = (schema, node) =>\n  F.when(_.isEmpty, _.map('field', schema))(node.include)\n\nlet Tr = props => (\n  <tr\n    {..._.omit(['record', 'fields', 'visibleFields', 'hiddenFields'], props)}\n  />\n)\n\nlet ResultTable = ({\n  fields,\n  infer,\n  path,\n  criteria,\n  node = {},\n  tree,\n  NoResultsComponent = 'No Results Found',\n  IntroComponent = null, // Initial component to be shown instead of the grid when no data has been loaded\n  Row = Tr, // accept a custom Row component so we can do fancy expansion things\n  getRowKey, // allow passing a custom function to generate unique row key\n  mapNodeToProps = () => ({}),\n  pageSizeOptions, // an array of options to set the # of rows per page (default [20, 50, 100, 250])\n  stickyFields,\n  theme: { Table },\n}) => {\n  // If there are no fields, we won't render anything. This is most definitely a\n  // user error when it happens\n  if (_.isEmpty(fields) && !infer) throw new Error('Fields are empty')\n  // From Theme/Components\n  let mutate = tree.mutate(path)\n  // Account for all providers here (memory provider has results with no response parent)\n  let hasResults =\n    !!_.get('context.response.results.length', node) ||\n    !!_.get('context.results.length', node)\n  // NOTE infer + add columns does not work together (except for anything explicitly passed in)\n  //   When removing a field, it's not longer on the record, so infer can't pick it up since it runs per render\n  let schema = _.flow(\n    _.merge(infer && inferSchema(node)),\n    applyDefaults,\n    _.values,\n    _.orderBy('order', 'desc')\n  )(fields)\n  let includes = getIncludes(schema, node)\n  let isIncluded = x => _.includes(x.field, includes)\n  let visibleFields = _.flow(\n    _.map(field => _.find({ field }, schema)),\n    _.compact\n  )(includes)\n  let hiddenFields = _.reject(isIncluded, schema)\n\n  let headerProps = {\n    mapNodeToProps,\n    fields,\n    visibleFields,\n    includes,\n    addOptions: fieldsToOptions(hiddenFields),\n    addFilter: field => tree.add(criteria, newNodeFromField({ field, fields })),\n    tree,\n    node,\n    mutate,\n    criteria,\n  }\n  if (!node.updating && hasResults) {\n    return (\n      <>\n        <Table>\n          <thead>\n            <tr>\n              {F.mapIndexed(\n                x => (\n                  <Header\n                    key={x.field}\n                    field={x}\n                    sticky={_.contains(stickyFields, x.field)}\n                    {...headerProps}\n                  />\n                ),\n                visibleFields\n              )}\n              <HighlightedColumnHeader node={node} />\n            </tr>\n          </thead>\n          <TableBody\n            {...{\n              node,\n              fields,\n              visibleFields,\n              hiddenFields,\n              schema,\n              Row,\n              getRowKey,\n              stickyFields,\n            }}\n          />\n        </Table>\n        {node.pageSize > 0 && (\n          <div\n            style={{\n              background: '#fff',\n              width: 'calc(100vw - 540px)',\n              position: 'sticky',\n              bottom: 0,\n              left: '15px',\n              zIndex: 10,\n              boxShadow: 'white 0px -6px 6px',\n            }}\n          >\n            <ResultTableFooter {...{ tree, node, path, pageSizeOptions }} />\n          </div>\n        )}\n      </>\n    )\n  }\n  if (!node.markedForUpdate && !node.updating && !hasResults) {\n    return NoResultsComponent\n  }\n  return IntroComponent\n}\n\nexport let PagedResultTable = contexturify(ResultTable)\nexport default PagedResultTable\n"],"file":"index.js"}