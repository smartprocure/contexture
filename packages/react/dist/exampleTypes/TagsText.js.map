{"version":3,"sources":["../../src/exampleTypes/TagsText.js"],"names":["operatorOptions","F","autoLabelOptions","value","label","Text","tree","node","placeholder","theme","Select","TagsInput","Popover","Icon","operator","e","mutate","path","target","values","tag","_","without","join","triggerUpdate","flex","border","paddingTop","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport F from 'futil'\nimport { contexturify } from '../utils/hoc'\nimport { bgJoin } from '../styles/generic'\n\nimport TagsJoinPicker, { tagToGroupJoin } from './TagsJoinPicker'\nimport Flex from '../greyVest/Flex'\n\nlet operatorOptions = F.autoLabelOptions([\n  { value: 'containsWord', label: 'Field Contains' },\n  { value: 'wordStartsWith', label: 'Word Starts With' },\n  { value: 'wordEndsWith', label: 'Word Ends With' },\n  { value: 'containsExact', label: 'Word Is Exactly' },\n  { value: 'startsWith', label: 'Field Starts With' },\n  { value: 'endsWith', label: 'Field Ends With' },\n  { value: 'is', label: 'Field Is Exactly' },\n  // { value: 'isNot', label: 'Is Not' },\n  // { value: 'contains', label: 'Contains'},\n  // { value: 'doesNotContain', label: 'Does Not Contain'}\n])\n\nlet Text = ({\n  tree,\n  node,\n  placeholder,\n  theme: { Select, TagsInput, Popover, Icon },\n}) => (\n  <div className=\"contexture-text\">\n    <Select\n      value={node.operator}\n      onChange={e => tree.mutate(node.path, { operator: e.target.value })}\n      options={operatorOptions}\n    />\n\n    <Flex className=\"tags-query\">\n      <TagsInput\n        splitCommas\n        tags={node.values}\n        addTag={tag => {\n          tree.mutate(node.path, { values: [...node.values, tag] })\n        }}\n        removeTag={tag => {\n          tree.mutate(node.path, {\n            values: _.without([tag], node.values),\n          })\n        }}\n        tagStyle={bgJoin(tagToGroupJoin(node.join))}\n        submit={tree.triggerUpdate}\n        placeholder={placeholder}\n        style={{ flex: 1, border: 0 }}\n      />\n\n      <div style={{ paddingTop: 4 }}>\n        <Popover\n          trigger={\n            <div>\n              <Icon icon=\"TableColumnMenu\" />\n            </div>\n          }\n          position=\"bottom right\"\n          closeOnPopoverClick={false}\n          style={{ width: 240 }}\n        >\n          <TagsJoinPicker node={node} tree={tree} />\n        </Popover>\n      </div>\n    </Flex>\n  </div>\n)\n\nexport default contexturify(Text)\n"],"file":"TagsText.js"}