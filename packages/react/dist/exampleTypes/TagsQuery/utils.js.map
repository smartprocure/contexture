{"version":3,"sources":["../../../src/exampleTypes/TagsQuery/utils.js"],"names":["tagTerm","tagValueField","copyTags","node","tags","words","_","flow","map","reverse","join","navigator","clipboard","writeText","getTag","tag","key","find","getTagStyle","tagInstance","distance","fontWeight","get","opacity","onlyShowTheseResults"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEO,IAAIA,OAAO,GAAG,SAAd;;AACA,IAAIC,aAAa,GAAG,MAApB;;;AAEA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AAC5B,MAAIA,IAAI,CAACC,IAAT,EAAe;AACb,QAAIC,KAAK,GAAGC,eAAEC,IAAF,CAAOD,eAAEE,GAAF,CAAMP,aAAN,CAAP,EAA6BK,eAAEG,OAA/B,EAAwCH,eAAEI,IAAF,CAAO,GAAP,CAAxC,EAAqDP,IAAI,CAACC,IAA1D,CAAZ;;AACAO,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BR,KAA9B;AACD;AACF,CALM;;;;AAOA,IAAIS,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD;AAAA,MAAMZ,IAAN,uEAAa,EAAb;AAAA,MAAiBa,GAAjB,uEAAuBf,aAAvB;AAAA,SAClBK,eAAEW,IAAF,qBAAUD,GAAV,EAAgBD,GAAhB,GAAuBZ,IAAI,CAACC,IAA5B,KAAqC,EADnB;AAAA,CAAb,C,CAGP;;;;;AACO,IAAIc,WAAW,GAAG,SAAdA,WAAc,CAACf,IAAD,EAAOa,GAAP;AAAA,SAAe,UAAAD,GAAG,EAAI;AAC7C,QAAII,WAAW,GAAGL,MAAM,CAACC,GAAD,EAAMZ,IAAN,EAAYa,GAAZ,CAAxB;AACA,yDACMG,WAAW,CAACC,QAAZ,GAAuB,EAAvB,GAA4B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADlC,GAEK,qBAAO,oCAAef,eAAEgB,GAAF,CAAM,MAAN,EAAcnB,IAAd,CAAf,CAAP,CAFL;AAGEoB,MAAAA,OAAO,EACLJ,WAAW,CAACK,oBAAZ,IACA,CAAClB,eAAEW,IAAF,CAAO,sBAAP,EAA+Bd,IAAI,CAACC,IAApC,CADD,GAEI,CAFJ,GAGI;AAPR;AASD,GAXwB;AAAA,CAAlB","sourcesContent":["import _ from 'lodash/fp'\nimport { bgJoin } from '../../styles/generic'\nimport { tagToGroupJoin } from '../TagsJoinPicker'\n\nexport let tagTerm = 'keyword'\nexport let tagValueField = 'word'\n\nexport let copyTags = node => {\n  if (node.tags) {\n    let words = _.flow(_.map(tagValueField), _.reverse, _.join(','))(node.tags)\n    navigator.clipboard.writeText(words)\n  }\n}\n\nexport let getTag = (tag, node = {}, key = tagValueField) =>\n  _.find({ [key]: tag }, node.tags) || {}\n\n// TagsInput expects a `tagStyle` prop, which is a function of `tag`\nexport let getTagStyle = (node, key) => tag => {\n  let tagInstance = getTag(tag, node, key)\n  return {\n    ...(tagInstance.distance ? {} : { fontWeight: 'bold' }),\n    ...bgJoin(tagToGroupJoin(_.get('join', node))),\n    opacity:\n      tagInstance.onlyShowTheseResults ||\n      !_.find('onlyShowTheseResults', node.tags)\n        ? 1\n        : 0.5,\n  }\n}\n"],"file":"utils.js"}