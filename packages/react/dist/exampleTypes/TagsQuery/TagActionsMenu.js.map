{"version":3,"sources":["../../../src/exampleTypes/TagsQuery/TagActionsMenu.js"],"names":["TagActionsMenu","tag","node","tree","theme","Button","Checkbox","RadioList","tagInstance","minWidth","padding","_","startCase","tagTerm","includes","margin","F","autoLabelOptions","distance","value","mutate","path","tags","map","tagValueField","marginTop","onlyShowTheseResults","e","target","checked","flow","observer","withTheme"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAIA,cAAc,GAAG,SAAjBA,cAAiB,OAKf;AAAA,MAJJC,GAII,QAJJA,GAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,wBADJC,KACI;AAAA,MADKC,MACL,cADKA,MACL;AAAA,MADaC,QACb,cADaA,QACb;AAAA,MADuBC,SACvB,cADuBA,SACvB;AACJ,MAAIC,WAAW,GAAG,mBAAOP,GAAP,EAAYC,IAAZ,CAAlB;AACA,sBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,OAAO,EAAE;AAA1B;AAFT,kBAIE,6CACGC,eAAEC,SAAF,CAAYC,cAAZ,CADH,OAC0B,GAD1B,eAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAsCZ,GAAtC,CAFF,CAJF,EAQGU,eAAEG,QAAF,CAAW,GAAX,EAAgBb,GAAhB,kBACC;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,MAAM,EAAE;AAAV;AAAZ,kBACE,gCAAC,SAAD;AACE,IAAA,OAAO,EAAEC,kBAAEC,gBAAF,CAAmB,CAAC,OAAD,EAAU,OAAV,CAAnB,CADX;AAEE,IAAA,KAAK,EAAET,WAAW,CAACU,QAAZ,GAAuB,OAAvB,GAAiC,OAF1C;AAGE,IAAA,QAAQ,EAAE,kBAAAC,KAAK,EAAI;AACjBX,MAAAA,WAAW,CAACU,QAAZ,GAAuBC,KAAK,KAAK,OAAV,GAAoB,CAApB,GAAwB,CAA/C;AACAhB,MAAAA,IAAI,CAACiB,MAAL,CAAYlB,IAAI,CAACmB,IAAjB,EAAuB;AAAEC,QAAAA,IAAI,qBAAMpB,IAAI,CAACoB,IAAX;AAAN,OAAvB;AACD;AANH,IADF,eASE,gCAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbnB,MAAAA,IAAI,CAACiB,MAAL,CAAYlB,IAAI,CAACmB,IAAjB,EAAuB;AACrBC,QAAAA,IAAI,EAAEX,eAAEY,GAAF,CAAM,UAAAtB,GAAG,EAAI;AACjB,cAAIU,eAAEG,QAAF,CAAW,GAAX,EAAgBb,GAAG,CAACuB,oBAAD,CAAnB,CAAJ,EACEvB,GAAG,CAACiB,QAAJ,GAAeV,WAAW,CAACU,QAA3B;AACF,iBAAOjB,GAAP;AACD,SAJK,EAIHC,IAAI,CAACoB,IAJF;AADe,OAAvB;AAOD;AATH,sBAWgBT,cAXhB,MATF,CATJ,eAiCE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb;AAA3C,kBACE,gCAAC,QAAD;AACE,IAAA,OAAO,EAAEjB,WAAW,CAACkB,oBADvB;AAEE,IAAA,QAAQ,EAAE,kBAAAC,CAAC,EAAI;AACbnB,MAAAA,WAAW,CAACkB,oBAAZ,GAAmCC,CAAC,CAACC,MAAF,CAASC,OAA5C;AACA1B,MAAAA,IAAI,CAACiB,MAAL,CAAYlB,IAAI,CAACmB,IAAjB,EAAuB;AAAEC,QAAAA,IAAI,qBAAMpB,IAAI,CAACoB,IAAX;AAAN,OAAvB;AACD;AALH,IADF,eAQE,iEAAsBT,cAAtB,CARF,CAjCF,CADF;AA8CD,CArDD;;eAuDeF,eAAEmB,IAAF,CAAOC,mBAAP,EAAiBC,gBAAjB,EAA4BhC,cAA5B,C","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport F from 'futil'\nimport { observer } from 'mobx-react'\nimport { withTheme } from '../../utils/theme'\nimport { getTag, tagTerm, tagValueField } from './utils'\n\nlet TagActionsMenu = ({\n  tag,\n  node,\n  tree,\n  theme: { Button, Checkbox, RadioList },\n}) => {\n  let tagInstance = getTag(tag, node)\n  return (\n    <div\n      className=\"tags-query-tag-actions-menu\"\n      style={{ minWidth: 100, padding: 10 }}\n    >\n      <div>\n        {_.startCase(tagTerm)}:{' '}\n        <span className=\"filter-field-label\">{tag}</span>\n      </div>\n      {_.includes(' ', tag) && (\n        <div style={{ margin: '10px 0' }}>\n          <RadioList\n            options={F.autoLabelOptions(['fuzzy', 'exact'])}\n            value={tagInstance.distance ? 'fuzzy' : 'exact'}\n            onChange={value => {\n              tagInstance.distance = value === 'fuzzy' ? 3 : 0\n              tree.mutate(node.path, { tags: [...node.tags] })\n            }}\n          />\n          <Button\n            onClick={() => {\n              tree.mutate(node.path, {\n                tags: _.map(tag => {\n                  if (_.includes(' ', tag[tagValueField]))\n                    tag.distance = tagInstance.distance\n                  return tag\n                }, node.tags),\n              })\n            }}\n          >\n            Apply to all {tagTerm}s\n          </Button>\n        </div>\n      )}\n      <label className=\"labeled-checkbox\" style={{ marginTop: 15 }}>\n        <Checkbox\n          checked={tagInstance.onlyShowTheseResults}\n          onChange={e => {\n            tagInstance.onlyShowTheseResults = e.target.checked\n            tree.mutate(node.path, { tags: [...node.tags] })\n          }}\n        />\n        <span>Only view this {tagTerm}</span>\n      </label>\n    </div>\n  )\n}\n\nexport default _.flow(observer, withTheme)(TagActionsMenu)\n"],"file":"TagActionsMenu.js"}