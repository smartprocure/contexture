{"version":3,"sources":["../../../src/exampleTypes/TagsQuery/ActionsMenu.js"],"names":["ActionsMenu","node","tree","close","theme","Button","Checkbox","actionWrapper","_","identity","minWidth","padding","get","startCase","tagTerm","margin","mutate","path","tags","exact","e","target","checked","flow","observer","withTheme"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,WAAW,GAAG,SAAdA,WAAc;AAAA,MAChBC,IADgB,QAChBA,IADgB;AAAA,MAEhBC,IAFgB,QAEhBA,IAFgB;AAAA,MAGhBC,KAHgB,QAGhBA,KAHgB;AAAA,wBAIhBC,KAJgB;AAAA,MAIPC,MAJO,cAIPA,MAJO;AAAA,MAICC,QAJD,cAICA,QAJD;AAAA,gCAKhBC,aALgB;AAAA,MAKhBA,aALgB,mCAKAC,eAAEC,QALF;AAAA,sBAOhB,gCAAC,cAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KADT;AAEE,IAAA,SAAS,EAAC,yBAFZ;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,cAAc,EAAC,SAJjB;AAKE,IAAA,UAAU,EAAC;AALb,KAOG,CAAC,CAACH,eAAEI,GAAF,CAAM,aAAN,EAAqBX,IAArB,CAAF,iBACC,+EACE,gCAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,aAAa,CAAC;AAAA,aAAMJ,KAAK,MAAM,qBAASF,IAAT,CAAjB;AAAA,KAAD;AAA9B,cACQO,eAAEK,SAAF,CAAYC,cAAZ,CADR,MADF,eAIE,gCAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,OAAO,EAAER,aAAa,CACpB;AAAA,aAAMJ,KAAK,MAAMD,IAAI,CAACc,MAAL,CAAYf,IAAI,CAACgB,IAAjB,EAAuB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAvB,CAAjB;AAAA,KADoB;AAFxB,eAMSV,eAAEK,SAAF,CAAYC,cAAZ,CANT,MAJF,eAYE;AAAK,IAAA,SAAS,EAAC;AAAf,IAZF,CARJ,eAuBE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAA3C,kBACE,gCAAC,QAAD;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,OAAO,EAAE,CAACd,IAAI,CAACkB,KAFjB;AAGE,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIlB,IAAI,CAACc,MAAL,CAAYf,IAAI,CAACgB,IAAjB,EAAuB;AAAEE,QAAAA,KAAK,EAAE,CAACC,CAAC,CAACC,MAAF,CAASC;AAAnB,OAAvB,CAAJ;AAAA;AAHb,IADF,eAME,wEANF,CAvBF,eA+BE,0DACE,gCAAC,0BAAD;AAAgB,IAAA,IAAI,EAAErB,IAAtB;AAA4B,IAAA,IAAI,EAAEC;AAAlC,IADF,CA/BF,CAPgB;AAAA,CAAlB;;eA4CeM,eAAEe,IAAF,CAAOC,mBAAP,EAAiBC,gBAAjB,EAA4BzB,WAA5B,C","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport { observer } from 'mobx-react'\nimport TagsJoinPicker from '../TagsJoinPicker'\nimport { withTheme } from '../../utils/theme'\nimport { Flex } from '../../greyVest'\nimport { copyTags, tagTerm } from './utils'\n\nlet ActionsMenu = ({\n  node,\n  tree,\n  close,\n  theme: { Button, Checkbox },\n  actionWrapper = _.identity,\n}) => (\n  <Flex\n    style={{ minWidth: 240, padding: 10 }}\n    className=\"tags-query-actions-menu\"\n    column\n    justifyContent=\"stretch\"\n    alignItems=\"stretch\"\n  >\n    {!!_.get('tags.length', node) && (\n      <>\n        <Button onClick={actionWrapper(() => close() || copyTags(node))}>\n          Copy {_.startCase(tagTerm)}s\n        </Button>\n        <Button\n          style={{ margin: '10px 0' }}\n          onClick={actionWrapper(\n            () => close() || tree.mutate(node.path, { tags: [] })\n          )}\n        >\n          Clear {_.startCase(tagTerm)}s\n        </Button>\n        <div className=\"line-separator\" />\n      </>\n    )}\n    <label className=\"labeled-checkbox\" style={{ margin: '10px 0' }}>\n      <Checkbox\n        htmlId=\"stemming\"\n        checked={!node.exact}\n        onChange={e => tree.mutate(node.path, { exact: !e.target.checked })}\n      />\n      <span>Include word variations</span>\n    </label>\n    <div>\n      <TagsJoinPicker node={node} tree={tree} />\n    </div>\n  </Flex>\n)\n\nexport default _.flow(observer, withTheme)(ActionsMenu)\n"],"file":"ActionsMenu.js"}