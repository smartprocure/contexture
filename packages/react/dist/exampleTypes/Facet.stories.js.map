{"version":3,"sources":["../../src/exampleTypes/Facet.stories.js"],"names":["title","component","Facet","decorators","facet","facetSelect","emojiDataset","data","require","service","tree","key","children","type","field","refresh","overflow","category","order"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;eAEe;AACbA,EAAAA,KAAK,EAAE,sBADM;AAEbC,EAAAA,SAAS,EAAEC,OAFE;AAGbC,EAAAA,UAAU,EAAE,CAAC,6BAAY,UAAZ,CAAD;AAHC,C;;;AAMR,IAAIC,KAAK,GAAG,SAARA,KAAQ;AAAA,sBAAM,gCAAC,OAAD;AAAO,IAAA,IAAI,EAAE,2BAAb;AAAyB,IAAA,IAAI,EAAE,CAAC,OAAD;AAA/B,IAAN;AAAA,CAAZ;;;;AAEA,IAAIC,WAAW,GAAG,SAAdA,WAAc;AAAA,sBACvB,gCAAC,aAAD;AAAa,IAAA,IAAI,EAAE,2BAAnB;AAA+B,IAAA,IAAI,EAAE,CAAC,OAAD;AAArC,IADuB;AAAA,CAAlB;;;;AAIA,IAAIC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,MAAIC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,MAAIC,OAAO,GAAG,gCAAcF,IAAd,CAAd;AACA,MAAIG,IAAI,GAAG,gCAAe;AAAED,IAAAA,OAAO,EAAPA;AAAF,GAAf,EAA4B;AACrCE,IAAAA,GAAG,EAAE,MADgC;AAErCC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAD,EAAuC;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAvC;AAF2B,GAA5B,CAAX;AAIAH,EAAAA,IAAI,CAACK,OAAL,CAAa,CAAC,MAAD,CAAb;AACA,sBACE,gCAAC,cAAD;AAAM,IAAA,OAAO,EAAC,SAAd;AAAwB,IAAA,GAAG,EAAE;AAA7B,kBACE,gCAAC,aAAD,qBACE,gCAAC,OAAD;AAAO,IAAA,IAAI,EAAEL,IAAb;AAAmB,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,gBAAT;AAAzB,IADF,CADF,eAIE,gCAAC,aAAD;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE;AAAZ;AAAZ,kBACE,gCAAC,aAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAEN,IAFR;AAGE,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,SAAT,CAHR;AAIE,IAAA,MAAM,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAZ;AAJV,IADF,CAJF,CADF;AAeD,CAvBM","sourcesContent":["import React from 'react'\nimport TestTree from './stories/testTree'\nimport ThemePicker from '../stories/themePicker'\nimport { memoryService } from '../MemoryTable'\nimport ContextureMobx from '../utils/contexture-mobx'\nimport { Grid, Box } from '../greyVest'\nimport { Facet, FacetSelect, ResultTable } from '.'\n\nexport default {\n  title: 'ExampleTypes | Facet',\n  component: Facet,\n  decorators: [ThemePicker('greyVest')],\n}\n\nexport let facet = () => <Facet tree={TestTree()} path={['facet']} />\n\nexport let facetSelect = () => (\n  <FacetSelect tree={TestTree()} path={['facet']} />\n)\n\nexport let emojiDataset = () => {\n  let data = require('emoji-datasource')\n  let service = memoryService(data)\n  let tree = ContextureMobx({ service })({\n    key: 'root',\n    children: [{ type: 'facet', field: 'category' }, { type: 'results' }],\n  })\n  tree.refresh(['root'])\n  return (\n    <Grid columns=\"1fr 3fr\" gap={8}>\n      <Box>\n        <Facet tree={tree} path={['root', 'category-facet']} />\n      </Box>\n      <Box style={{ overflow: 'auto' }}>\n        <ResultTable\n          infer\n          tree={tree}\n          path={['root', 'results']}\n          fields={{ category: { order: 1 } }}\n        />\n      </Box>\n    </Grid>\n  )\n}\n"],"file":"Facet.stories.js"}