{"version":3,"sources":["../../src/greyVest/ExpandableTagsInput.js"],"names":["Tags","reverse","tags","removeTag","tagStyle","onTagClick","_","noop","Tag","DefaultTag","cursor","margin","flow","identity","map","t","isValidInput","tag","isEmpty","includes","ExpandableTagsInput","addTag","submit","placeholder","splitCommas","style","onBlur","onInputChange","props","split","invokeMap","compact","uniq","difference","trim","React","useState","currentInput","setCurrentInput","flex","border","e","target","value","key","preventDefault","length","last"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport { observer } from 'mobx-react'\nimport { Tag as DefaultTag, Flex } from '.'\n\nexport let Tags = ({\n  reverse = false,\n  tags,\n  removeTag,\n  tagStyle,\n  onTagClick = _.noop,\n  Tag = DefaultTag,\n}) => (\n  <Flex\n    wrap\n    alignItems=\"center\"\n    style={{\n      cursor: 'text',\n      margin: '0 -2px',\n    }}\n  >\n    {_.flow(\n      reverse ? _.reverse : _.identity,\n      _.map(t => (\n        <Tag\n          key={t}\n          value={t}\n          {...{ removeTag, tagStyle }}\n          onClick={() => onTagClick(t)}\n        />\n      ))\n    )(tags)}\n  </Flex>\n)\n\nlet isValidInput = (tag, tags) => !_.isEmpty(tag) && !_.includes(tag, tags)\n\nlet ExpandableTagsInput = ({\n  tags,\n  addTag,\n  removeTag,\n  submit = _.noop,\n  tagStyle,\n  placeholder = 'Search...',\n  splitCommas,\n  style,\n  onBlur = _.noop,\n  onInputChange = _.noop,\n  onTagClick = _.noop,\n  Tag = DefaultTag,\n  ...props\n}) => {\n  addTag = splitCommas\n    ? _.flow(\n        _.split(','),\n        _.invokeMap('trim'),\n        _.compact,\n        _.uniq,\n        _.difference(_, tags),\n        _.map(addTag)\n      )\n    : _.flow(_.trim, addTag)\n  let [currentInput, setCurrentInput] = React.useState('')\n  return (\n    <div style={style}>\n      <span className=\"tags-input-container\" columns=\"1fr auto\" gap=\"8px 4px\">\n        <input\n          style={{ flex: 1, border: 0 }}\n          onChange={e => {\n            setCurrentInput(e.target.value)\n            onInputChange()\n          }}\n          onBlur={() => {\n            if (isValidInput(currentInput, tags)) {\n              addTag(currentInput)\n              setCurrentInput('')\n              onBlur()\n            }\n          }}\n          onKeyDown={e => {\n            if (e.key === 'Enter' && !currentInput) submit()\n            if (\n              (_.includes(e.key, ['Enter', 'Tab']) ||\n                (splitCommas && e.key === ',')) &&\n              isValidInput(currentInput, tags)\n            ) {\n              addTag(currentInput)\n              setCurrentInput('')\n              e.preventDefault()\n            }\n            if (e.key === 'Backspace' && !currentInput && tags.length) {\n              let last = _.last(tags)\n              removeTag(last)\n              setCurrentInput(last)\n              e.preventDefault()\n            }\n          }}\n          value={currentInput}\n          placeholder={placeholder}\n          {...props}\n        />\n        <Tags reverse {...{ tags, removeTag, tagStyle, onTagClick, Tag }} />\n      </span>\n    </div>\n  )\n}\n\nexport default observer(ExpandableTagsInput)\n"],"file":"ExpandableTagsInput.js"}