{"version":3,"sources":["../../src/greyVest/Popover.stories.js"],"names":["title","component","Popover","decorators","decorator","withOpenProp","open","F","on","story","name","withIsOpenOnCloseProps","React","useState","isOpen","setIsOpen","withTriggerProp"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;eAEe;AACbA,EAAAA,KAAK,EAAE,0BADM;AAEbC,EAAAA,SAAS,EAAEC,SAFE;AAGbC,EAAAA,UAAU,EAAE,CAACC,qBAAD;AAHC,C;;;AAMR,IAAIC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,MAAIC,IAAI,GAAG,qBAAS,KAAT,CAAX;AACA,sBACE,+EACE,gCAAC,SAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,OAAO,eAAE,gCAAC,QAAD;AAAQ,MAAA,OAAO,EAAEC,kBAAEC,EAAF,CAAKF,IAAL;AAAjB;AAFX,4BADF,CADF;AAUD,CAZM;;;AAaPD,YAAY,CAACI,KAAb,GAAqB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAArB;;AAEO,IAAIC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AAAA,wBACdC,kBAAMC,QAAN,CAAe,KAAf,CADc;AAAA;AAAA,MACnCC,MADmC;AAAA,MAC3BC,SAD2B;;AAExC,sBACE,+EACE,gCAAC,SAAD;AACE,IAAA,MAAM,EAAED,MADV;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,SAAS,CAAC,KAAD,CAAf;AAAA,KAFX;AAGE,IAAA,OAAO,eAAE,gCAAC,QAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMA,SAAS,CAAC,IAAD,CAAf;AAAA;AAAjB;AAHX,4BADF,CADF;AAWD,CAbM;;;AAcPJ,sBAAsB,CAACF,KAAvB,GAA+B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA/B;;AAEO,IAAIM,eAAe,GAAG,SAAlBA,eAAkB;AAAA,sBAC3B,+EACE,gCAAC,SAAD;AAAS,IAAA,OAAO,eAAE,gCAAC,QAAD;AAAlB,4BADF,CAD2B;AAAA,CAAtB;;;AAOPA,eAAe,CAACP,KAAhB,GAAwB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAxB","sourcesContent":["import React, { useState } from 'react'\nimport F from 'futil'\nimport { Button, Popover } from '.'\nimport decorator from './stories/decorator'\n\nexport default {\n  title: 'GreyVest Library|Popover',\n  component: Popover,\n  decorators: [decorator],\n}\n\nexport let withOpenProp = () => {\n  let open = useState(false)\n  return (\n    <>\n      <Popover\n        open={open}\n        trigger={<Button onClick={F.on(open)}>Open Popover</Button>}\n      >\n        Some Popover Content\n      </Popover>\n    </>\n  )\n}\nwithOpenProp.story = { name: \"With 'open' prop\" }\n\nexport let withIsOpenOnCloseProps = () => {\n  let [isOpen, setIsOpen] = React.useState(false)\n  return (\n    <>\n      <Popover\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        trigger={<Button onClick={() => setIsOpen(true)}>Open Popover</Button>}\n      >\n        Some Popover Content\n      </Popover>\n    </>\n  )\n}\nwithIsOpenOnCloseProps.story = { name: \"With 'isOpen'/'onClose' props\" }\n\nexport let withTriggerProp = () => (\n  <>\n    <Popover trigger={<Button>Open Popover</Button>}>\n      Some Popover Content\n    </Popover>\n  </>\n)\nwithTriggerProp.story = { name: 'With trigger Component' }\n"],"file":"Popover.stories.js"}