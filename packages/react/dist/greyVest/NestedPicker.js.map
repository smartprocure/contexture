{"version":3,"sources":["../../src/greyVest/NestedPicker.js"],"names":["PickerContext","React","createContext","unflattenObjectBy","_","curry","iteratee","x","zipObjectDeep","F","mapIndexed","values","isField","typeDefault","FilteredSection","flow","observer","options","onClick","highlight","useContext","PickerItem","TextHighlight","option","field","value","label","getItemLabel","item","shortLabel","startCase","_key","Section","selected","overflow","width","map","unkeyBy","sortBy","toNested","defaults","path","PanelTreePicker","store","onChange","state","nestedOptions","selectAtLevel","level","key","splice","length","display","index","get","slice","displayName","matchLabel","str","filter","matchAllWords","NestedPicker","TextInput","GVTextInput","GVTextHighlight","useState","domLens","view"],"mappings":"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","sourcesContent":["import React from 'react'\nimport F from 'futil'\nimport _ from 'lodash/fp'\nimport { setDisplayName } from 'recompose'\nimport { inject, observer } from 'mobx-react'\nimport { observable } from 'mobx'\n\nimport GVTextHighlight from './TextHighlight'\nimport GVTextInput from './TextInput'\n\nlet PickerContext = React.createContext()\n\n// Unflatten by with support for arrays (allow dots in paths) and not needing a _.keyBy first\nlet unflattenObjectBy = _.curry((iteratee, x) =>\n  _.zipObjectDeep(F.mapIndexed(iteratee, x), _.values(x))\n)\n\nlet isField = x => x.typeDefault\n\nlet FilteredSection = _.flow(\n  setDisplayName('FilteredSection'),\n  observer\n)(({ options, onClick, highlight }) => {\n  let { PickerItem, TextHighlight } = React.useContext(PickerContext)\n  return (\n    <div>\n      {F.mapIndexed(\n        (option, field) => (\n          <PickerItem key={field} onClick={() => onClick(option.value)}>\n            <TextHighlight text={option.label} pattern={highlight} />\n          </PickerItem>\n        ),\n        options\n      )}\n    </div>\n  )\n})\n\nlet getItemLabel = item =>\n  isField(item) ? item.shortLabel || item.label : _.startCase(item._key)\n\nlet Section = _.flow(\n  setDisplayName('Section'),\n  observer\n)(({ options, onClick, selected }) => {\n  let { PickerItem } = React.useContext(PickerContext)\n  return (\n    <div style={{ overflow: 'auto', width: '100%' }}>\n      {_.map(\n        item => (\n          <PickerItem\n            key={item._key}\n            onClick={() => onClick(item.value || item._key, item)}\n            active={selected === item._key}\n            disabled={selected && selected !== item._key}\n            hasChildren={!isField(item)}\n          >\n            {getItemLabel(item)}\n          </PickerItem>\n        ),\n        _.flow(F.unkeyBy('_key'), _.sortBy(getItemLabel))(options)\n      )}\n    </div>\n  )\n})\n\nlet toNested = _.flow(\n  _.map(x => _.defaults({ path: x.value }, x)),\n  unflattenObjectBy('path')\n)\nlet PanelTreePicker = inject((store, { onChange, options }) => {\n  let x = {\n    state: observable({ selected: [] }),\n    nestedOptions: toNested(options),\n    selectAtLevel: _.curry((level, key, field) => {\n      if (isField(field)) onChange(field.value)\n      else x.state.selected.splice(level, x.state.selected.length - level, key)\n    }),\n  }\n  return x\n})(\n  observer(({ selectAtLevel, state, nestedOptions }) => (\n    <div\n      className=\"panel-tree-picker\"\n      style={{ display: 'inline-flex', width: '100%' }}\n    >\n      <Section\n        options={nestedOptions}\n        onClick={selectAtLevel(0)}\n        selected={state.selected[0]}\n      />\n      {F.mapIndexed(\n        (_key, index) => (\n          <Section\n            key={index}\n            options={_.get(state.selected.slice(0, index + 1), nestedOptions)}\n            onClick={selectAtLevel(index + 1)}\n            selected={state.selected[index + 1]}\n          />\n        ),\n        state.selected\n      )}\n    </div>\n  ))\n)\nPanelTreePicker.displayName = 'PanelTreePicker'\n\nlet matchLabel = str => _.filter(x => F.matchAllWords(str)(x.label))\n\nlet NestedPicker = ({\n  options,\n  onChange,\n  PickerItem = 'div',\n  TextInput = GVTextInput,\n  TextHighlight = GVTextHighlight,\n}) => {\n  let filter = React.useState('')\n  return (\n    <PickerContext.Provider value={{ PickerItem, TextHighlight }}>\n      <TextInput\n        {...F.domLens.value(filter)}\n        placeholder=\"Enter filter keyword...\"\n      />\n      {F.view(filter) ? (\n        <FilteredSection\n          options={matchLabel(F.view(filter))(options)}\n          onClick={onChange}\n          highlight={F.view(filter)}\n        />\n      ) : (\n        <PanelTreePicker options={options} onChange={onChange} />\n      )}\n    </PickerContext.Provider>\n  )\n}\n\nexport default observer(NestedPicker)\n"],"file":"NestedPicker.js"}