{"version":3,"sources":["../../src/greyVest/Tabs.js"],"names":["TabContent","TabLabel","Tab","Tabs","children","onChange","_","noop","TabsList","TabList","TabPanel","Box","defaultValue","props","childrenArray","React","Children","toArray","options","flow","filter","child","type","F","mapIndexed","i","value","label","setValue","isNil","handleChange","to","from","content","convert","cap","callOrReturn","display","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport _ from 'lodash/fp'\nimport F from 'futil'\nimport TabList from './TabList'\nimport Box from './Box'\n\n/* Usage */\n/*\n<Tabs tabControl={ButtonRadio} value=\"references\">\n  <Tab value=\"references\" label=\"References\">\n    <PO Table />\n  </Tab>\n  <Tab label=\"Fancy Label\">\n  </Tab>\n  <TabLabel value=\"option2\">\n    Option 2's Label\n  </TabLabel>\n  <TabContent value=\"option2\">\n    Option 2's Content\n  </TabContent>\n  <Tab value=\"functionTab\" label=\"functionTab\">\n    {currentTab => <div>Function Tab Content</div>}\n  </Tab>\n</Tabs>\n*/\n\nexport let TabContent = () => {}\nexport let TabLabel = () => {}\nexport let Tab = () => {}\nexport let Tabs = ({\n  children,\n  onChange = _.noop,\n  TabsList = TabList,\n  TabPanel = Box,\n  defaultValue,\n  ...props\n}) => {\n  let childrenArray = React.Children.toArray(children)\n  let options = _.flow(\n    _.filter(child => child.type === Tab || child.type === TabLabel),\n    F.mapIndexed(({ type, props }, i) => ({\n      value: props.value || i,\n      label: type === Tab ? props.label : props.children,\n    }))\n  )(childrenArray)\n\n  let [value, setValue] = useState(defaultValue || options[0].value)\n  // Allow controlled state\n  if (!_.isNil(props.value) && props.value !== value) setValue(props.value)\n  let handleChange = (to, from) => {\n    onChange(to, from)\n    setValue(to)\n  }\n\n  let content = _.flow(\n    _.filter.convert({ cap: false })(\n      ({ type, props }, i) =>\n        (type === Tab || type === TabContent) &&\n        (value === props.value || value === i)\n    ),\n    F.mapIndexed(({ props }, i) => (\n      <React.Fragment key={i}>\n        {F.callOrReturn(props.children, value)}\n      </React.Fragment>\n    ))\n  )(childrenArray)\n\n  return (\n    <>\n      <TabsList value={value} onChange={handleChange} options={options} />\n      <div style={{\n        display: 'inline-block',\n        minWidth: '100%',\n      }}>\n        <TabPanel>{content}</TabPanel>\n      </div>\n    </>\n  )\n}\n"],"file":"Tabs.js"}