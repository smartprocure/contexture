{"version":3,"sources":["../src/FilterList.js"],"names":["FilterActions","_","flow","observer","withTheme","node","tree","fields","popover","theme","DropdownItem","Popover","Modal","NestedPicker","modal","React","useState","typeOptions","getOr","field","without","type","replace","path","F","off","isEmpty","map","x","value","label","on","hasValue","clear","remove","Label","children","Icon","props","get","trim","cursor","alignItems","justifyContent","paused","e","stopPropagation","flip","flexGrow","FilterList","contexturifyWithoutLoader","mapNodeToProps","noop","mapNodeToLabel","className","style","UnmappedNodeComponent","Button","child","mutate","component","toArray","disableAutoUpdate","some","treeNode","markedForUpdate","treeToArray","position","bottom","paddingBottom","marginBottom","background","boxShadow","triggerUpdate","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash/fp'\nimport F from 'futil'\nimport { setDisplayName } from 'recompose'\nimport { observer } from 'mobx-react'\nimport { Expandable, Flex, Dynamic } from './greyVest'\nimport { fieldsToOptions } from './FilterAdder'\nimport { contexturifyWithoutLoader } from './utils/hoc'\nimport { bdJoin } from './styles/generic'\nimport {\n  newNodeFromType,\n  transformNodeFromField,\n  getTypeLabel,\n  getTypeLabelOptions,\n} from './utils/search'\nimport { withTheme } from './utils/theme'\n\nexport let FilterActions = _.flow(\n  setDisplayName('FilterActions'),\n  observer,\n  withTheme\n)(\n  ({\n    node,\n    tree,\n    fields,\n    popover,\n    theme: { DropdownItem, Popover, Modal, NestedPicker },\n  }) => {\n    let modal = React.useState(false)\n    let typeOptions = _.flow(\n      _.getOr([], [node.field, 'typeOptions']),\n      _.without([node.type])\n    )(fields)\n\n    return (\n      <>\n        <Modal open={modal}>\n          <NestedPicker\n            options={fieldsToOptions(fields)}\n            onChange={field => {\n              tree.replace(node.path, transformNodeFromField({ field, fields }))\n              F.off(modal)()\n            }}\n          />\n        </Modal>\n        <Popover open={popover} arrow={false}>\n          {!_.isEmpty(typeOptions) && (\n            <>\n              <DropdownItem className=\"filter-actions-selected-type\">\n                Filter type: <strong>{getTypeLabel(tree, node.type)}</strong>\n              </DropdownItem>\n              {_.map(\n                x => (\n                  <DropdownItem\n                    key={x.value}\n                    onClick={() =>\n                      tree.replace(\n                        node.path,\n                        newNodeFromType(x.value, fields, node)\n                      )\n                    }\n                  >\n                    â€”Change to {x.label}\n                  </DropdownItem>\n                ),\n                getTypeLabelOptions(tree, typeOptions)\n              )}\n              <div className=\"filter-actions-separator\" />\n            </>\n          )}\n          <DropdownItem onClick={F.on(modal)}>Pick Field</DropdownItem>\n          {/* If only contexture-client diffed the tree before sending a request... */}\n          {(node.hasValue || false) && (\n            <DropdownItem onClick={() => tree.clear(node.path)}>\n              Clear Filter\n            </DropdownItem>\n          )}\n          <DropdownItem onClick={() => tree.remove(node.path)}>\n            Delete Filter\n          </DropdownItem>\n        </Popover>\n      </>\n    )\n  }\n)\n\nexport let Label = _.flow(\n  setDisplayName('Label'),\n  observer,\n  withTheme\n)(({ tree, node, fields, children, theme: { Icon }, ...props }) => {\n  let popover = React.useState(false)\n  let modal = React.useState(false)\n  let field = _.get('field', node)\n  return (\n    <Flex\n      className={`filter-field-label ${\n        _.get('hasValue', node) ? 'filter-field-has-value' : ''\n      }`.trim()}\n      style={{\n        cursor: 'pointer',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}\n    >\n      <span {...props}>\n        {children || _.get([field, 'label'], fields) || field || ''}\n      </span>\n      {tree && node && (\n        <>\n          <span\n            onClick={\n              node.paused\n                ? null\n                : e => {\n                    e.stopPropagation()\n                    F.flip(popover)()\n                  }\n            }\n          >\n            <span className=\"filter-field-label-icon\">\n              <Icon icon=\"TableColumnMenu\" />\n            </span>\n            <FilterActions\n              node={node}\n              tree={tree}\n              fields={fields}\n              popover={popover}\n              modal={modal}\n            />\n          </span>\n          {\n            // Whitespace separator\n            <div style={{ flexGrow: 1 }} />\n          }\n        </>\n      )}\n    </Flex>\n  )\n})\n\n// we can't do this on export because FilterList is used internally\nlet FilterList = _.flow(\n  setDisplayName('FilterList'),\n  contexturifyWithoutLoader\n)(\n  ({\n    tree,\n    node,\n    fields,\n    mapNodeToProps = _.noop,\n    mapNodeToLabel = _.noop,\n    className,\n    style,\n    theme: { UnmappedNodeComponent, Button, Icon },\n  }) => (\n    <div style={style} className={className}>\n      {_.map(\n        child =>\n          child.children ? (\n            <FilterList\n              key={child.path}\n              tree={tree}\n              node={child}\n              fields={fields}\n              mapNodeToProps={mapNodeToProps}\n              mapNodeToLabel={mapNodeToLabel}\n              className={'filter-list-group'}\n              style={bdJoin(child)}\n            />\n          ) : (\n            <Expandable\n              key={child.path}\n              className=\"filter-list-item\"\n              isOpen={!child.paused}\n              Label={\n                <Label tree={tree} node={child} fields={fields}>\n                  {mapNodeToLabel(child, fields)}\n                </Label>\n              }\n              onClick={() =>\n                tree && tree.mutate(child.path, { paused: !child.paused })\n              }\n            >\n              <div className=\"filter-list-item-contents\">\n                <Dynamic\n                  {...{\n                    component: UnmappedNodeComponent,\n                    tree,\n                    node: child,\n                    path: _.toArray(child.path),\n                    ...mapNodeToProps(child, fields),\n                  }}\n                />\n              </div>\n            </Expandable>\n          ),\n        _.get('children', node)\n      )}\n      {tree.disableAutoUpdate &&\n        // find if any nodes in the tree are marked for update (i.e. usually nodes are marked for update because they react to \"others\" reactor)\n        _.some(\n          treeNode => treeNode !== node && treeNode.markedForUpdate,\n          F.treeToArray(_.get('children'))(tree.tree)\n        ) && (\n          <div\n            className=\"apply-filter-button\"\n            style={{\n              position: 'sticky',\n              bottom: 0,\n              paddingBottom: '.5em',\n              marginBottom: '.5em',\n              background: 'white',\n              boxShadow: 'white 0 -6px 6px',\n            }}\n            onClick={e => {\n              e.stopPropagation()\n              tree.triggerUpdate()\n            }}\n          >\n            <Button primary>\n              <Flex justifyContent=\"center\" alignItems=\"center\">\n                Apply Filters\n                <Icon style={{ paddingLeft: 5 }} icon=\"FilterApply\" />\n              </Flex>\n            </Button>\n          </div>\n        )}\n    </div>\n  )\n)\n\nexport default FilterList\n"],"file":"FilterList.js"}