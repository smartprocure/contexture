{"version":3,"sources":["../../../src/stories/imdb/searchLayout.js"],"names":["tree","key","type","schema","children","field","join","useDateMath","min","max","paused","from","to","value","include","sortField","key_field","value_field","order","size","disableAutoUpdate","state","mode","termDetailsTree","_","memoize","term","termTree","pageSize","mutate","values","divs","map","x","overrides","movies","fields","released","label","poster","display","title","__html","genres","actors","imdbId","path","imdbRating","imdbVotes","year","defaultNodeProps","number","metaScore","significantDigits","schemas","then","merge","tap","refresh","mapNodeToProps","F","mergeOverAll","TypeMap","component","DateRangePicker","ranges","GreyVestSearchBarStory","theme","titleContains","titleDoesNotContain","aspectWrapper","flip","window","location","reload","Box","omit","className","marginBottom","pick"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AASA;;AACA;;AAQA;;AACA;;AACA;;;;;;;;;;AAEA,IAAIA,IAAI,GAAG,4BAAW;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,IAAI,EAAE,OAFc;AAGpBC,EAAAA,MAAM,EAAE,QAHY;AAIpBC,EAAAA,QAAQ,EAAE,CACR;AACEH,IAAAA,GAAG,EAAE,KADP;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEG,IAAAA,KAAK,EAAE;AAHT,GADQ,EAMR;AACEJ,IAAAA,GAAG,EAAE,UADP;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEI,IAAAA,IAAI,EAAE,KAHR;AAIEF,IAAAA,QAAQ,EAAE,CACR;AACEH,MAAAA,GAAG,EAAE,QADP;AAEEI,MAAAA,KAAK,EAAE,UAFT;AAGEH,MAAAA,IAAI,EAAE,MAHR;AAIEK,MAAAA,WAAW,EAAE;AAJf,KADQ,EAOR;AACEN,MAAAA,GAAG,EAAE,YADP;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEI,MAAAA,IAAI,EAAE,IAHR;AAIEF,MAAAA,QAAQ,EAAE,CACR;AACEH,QAAAA,GAAG,EAAE,eADP;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEG,QAAAA,KAAK,EAAE;AAHT,OADQ,EAMR;AACEJ,QAAAA,GAAG,EAAE,qBADP;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEG,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,IAAI,EAAE;AAJR,OANQ;AAJZ,KAPQ,EAyBR;AACEL,MAAAA,GAAG,EAAE,WADP;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEG,MAAAA,KAAK,EAAE;AAHT,KAzBQ,EA8BR;AACEJ,MAAAA,GAAG,EAAE,cADP;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEG,MAAAA,KAAK,EAAE,WAHT;AAIEG,MAAAA,GAAG,EAAE,CAJP;AAKEC,MAAAA,GAAG,EAAE;AALP,KA9BQ,EAqCR;AACER,MAAAA,GAAG,EAAE,aADP;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEG,MAAAA,KAAK,EAAE,QAHT;AAIEK,MAAAA,MAAM,EAAE;AAJV,KArCQ,EA2CR;AACET,MAAAA,GAAG,EAAE,cADP;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEG,MAAAA,KAAK,EAAE;AAHT,KA3CQ,EAgDR;AACEJ,MAAAA,GAAG,EAAE,MADP;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEG,MAAAA,KAAK,EAAE,UAHT;AAIEM,MAAAA,IAAI,EAAE,0BAJR;AAKEC,MAAAA,EAAE,EAAE;AALN,KAhDQ,EAuDR;AACEX,MAAAA,GAAG,EAAE,yBADP;AAEEC,MAAAA,IAAI,EAAE,0BAFR;AAGEG,MAAAA,KAAK,EAAE;AAHT,KAvDQ,EA4DR;AACEJ,MAAAA,GAAG,EAAE,mBADP;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEI,MAAAA,IAAI,EAAE,IAHR;AAIEF,MAAAA,QAAQ,EAAE,CACR;AACEH,QAAAA,GAAG,EAAE,cADP;AAEEC,QAAAA,IAAI,EAAE,QAFR;AAGEG,QAAAA,KAAK,EAAE,eAHT;AAIEQ,QAAAA,KAAK,EAAE;AAJT,OADQ,EAOR;AACE;AACAZ,QAAAA,GAAG,EAAE,aAFP;AAGEC,QAAAA,IAAI,EAAE,MAHR;AAIEG,QAAAA,KAAK,EAAE,cAJT;AAKEQ,QAAAA,KAAK,EAAE;AALT,OAPQ;AAJZ,KA5DQ;AAJZ,GANQ,EA4FR;AACEZ,IAAAA,GAAG,EAAE,SADP;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEY,IAAAA,OAAO,EAAE,CACP,QADO,EAEP,gBAFO,EAGP,QAHO,EAIP,OAJO,EAKP,QALO,EAMP,QANO,EAOP,WAPO,EAQP,OARO,EASP,UATO,EAUP,MAVO,CAHX;AAeEC,IAAAA,SAAS,EAAE;AAfb,GA5FQ,EA6GR;AACEd,IAAAA,GAAG,EAAE,aADP;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEc,IAAAA,SAAS,EAAE,QAHb;AAIEC,IAAAA,WAAW,EAAE,WAJf;AAKEC,IAAAA,KAAK,EAAE,KALT;AAMEC,IAAAA,IAAI,EAAE;AANR,GA7GQ;AAJU,CAAX,CAAX;AA2HAnB,IAAI,CAACoB,iBAAL,GAAyB,IAAzB;AAEA,IAAIC,KAAK,GAAG,sBAAW;AACrBC,EAAAA,IAAI,EAAE;AADe,CAAX,CAAZ;;AAIA,IAAIC,eAAe,GAAGC,eAAEC,OAAF,CAAU,UAAAC,IAAI,EAAI;AACtC,MAAIC,QAAQ,GAAG,4BAAW;AACxB1B,IAAAA,GAAG,EAAE,YADmB;AAExBC,IAAAA,IAAI,EAAE,OAFkB;AAGxBC,IAAAA,MAAM,EAAE,QAHgB;AAIxBC,IAAAA,QAAQ,EAAE,CACR;AACEH,MAAAA,GAAG,EAAE,aADP;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEG,MAAAA,KAAK,EAAE;AAHT,KADQ,EAMR;AACEJ,MAAAA,GAAG,EAAE,SADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEa,MAAAA,SAAS,EAAE,WAHb;AAIEG,MAAAA,KAAK,EAAE,MAJT;AAKEU,MAAAA,QAAQ,EAAE;AALZ,KANQ;AAJc,GAAX,CAAf;AAoBAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAC,YAAD,EAAe,aAAf,CAAhB,EAA+C;AAAEC,IAAAA,MAAM,EAAE,CAACJ,IAAD;AAAV,GAA/C;AACA,SAAOC,QAAP;AACD,CAvBqB,CAAtB;;AAyBA,IAAII,IAAI,GAAGP,eAAEQ,GAAF,CAAM,UAAAC,CAAC;AAAA,sBAAI;AAAK,IAAA,GAAG,EAAEA;AAAV,KAAcA,CAAd,CAAJ;AAAA,CAAP,CAAX;;AACA,IAAIC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADJ;AAENC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,iBAAAP,CAAC;AAAA,8BAAI;AAAK,YAAA,GAAG,EAAEA,CAAV;AAAa,YAAA,KAAK,EAAC,KAAnB;AAAyB,YAAA,MAAM,EAAC;AAAhC,YAAJ;AAAA,SADJ;AAENf,QAAAA,KAAK,EAAE;AAFD,OAFF;AAMNuB,MAAAA,KAAK,EAAE;AACLvB,QAAAA,KAAK,EAAE,CADF;AAELsB,QAAAA,OAAO,EAAE,iBAAAP,CAAC;AAAA,8BAAI;AAAM,YAAA,uBAAuB,EAAE;AAAES,cAAAA,MAAM,EAAET;AAAV;AAA/B,YAAJ;AAAA;AAFL,OAND;AAUNU,MAAAA,MAAM,EAAE;AAAEH,QAAAA,OAAO,EAAET;AAAX,OAVF;AAWNa,MAAAA,MAAM,EAAE;AAAEJ,QAAAA,OAAO,EAAET;AAAX,OAXF;AAYNc,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT;AAAR,OAZF;AAaNC,MAAAA,UAAU,EAAE;AAAED,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,YAAT;AAAR,OAbN;AAcNE,MAAAA,SAAS,EAAE;AAAEF,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,WAAT;AAAR,OAdL;AAeNG,MAAAA,IAAI,EAAE;AAAEC,QAAAA,gBAAgB,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAE3C,YAAAA,GAAG,EAAE;AAAP;AAAV;AAApB,OAfA;AAgBN4C,MAAAA,SAAS,EAAE;AAAEC,QAAAA,iBAAiB,EAAE;AAArB;AAhBL;AADF;AADM,CAAhB;AAsBA,IAAIC,OAAO,GAAG,4BACZ,iCACGC,IADH,CACQ/B,eAAEgC,KAAF,CAAQtB,SAAR,CADR,EAEGqB,IAFH,CAEQ/B,eAAEiC,GAAF,CAAM;AAAA,SAAMzD,IAAI,CAAC0D,OAAL,CAAa,CAAC,MAAD,CAAb,CAAN;AAAA,CAAN,CAFR,CADY,CAAd;;AAMA,IAAIC,cAAc,GAAGC,kBAAEC,YAAF,CAAe,CAClC,yBAAiBC,qBAAjB,CADkC,EAElC,yBAAiB,iBAAjB,CAFkC,EAGlC;AAAA,MAAG7D,GAAH,QAAGA,GAAH;AAAA,SACEA,GAAG,KAAK,QAAR,IAAoB;AAClB8D,IAAAA,SAAS,EAAEC,6BADO;AAElBC,IAAAA,MAAM,EAAE,CACN;AAAE3B,MAAAA,KAAK,EAAE,UAAT;AAAqB3B,MAAAA,IAAI,EAAE,EAA3B;AAA+BC,MAAAA,EAAE,EAAE;AAAnC,KADM,EAEN;AAAE0B,MAAAA,KAAK,EAAE,WAAT;AAAsB3B,MAAAA,IAAI,EAAE,OAA5B;AAAqCC,MAAAA,EAAE,EAAE;AAAzC,KAFM,EAGN;AACE0B,MAAAA,KAAK,EAAE,WADT;AAEE3B,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,EAAE,EAAE;AAHN,KAHM;AAFU,GADtB;AAAA,CAHkC,CAAf,CAArB;;AAkBA,IAAIsD,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK;AAAA,sBAChC,gCAAC,UAAD;AAAS,IAAA,OAAO,EAAEb;AAAlB,KACG,UAAAA,OAAO;AAAA,wBACN,gCAAC,eAAD;AAAc,MAAA,IAAI,EAAEjC,KAAK,CAACC;AAA1B,oBACE,gCAAC,gBAAD;AAAe,MAAA,IAAI,EAAED,KAAK,CAACC,IAA3B;AAAiC,MAAA,OAAO,EAAE,iBAAAW,CAAC;AAAA,eAAKZ,KAAK,CAACC,IAAN,GAAaW,CAAlB;AAAA;AAA3C,oBACE,gCAAC,aAAD;AACE,MAAA,IAAI,EAAEjC,IADR;AAEE,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,UAAT,CAFR;AAGE,MAAA,MAAM,EAAEsD,OAAO,CAACnB,MAAR,CAAeC,MAHzB;AAIE,MAAA,cAAc,EAAE;AAAA,YAAGnC,GAAH,SAAGA,GAAH;AAAA,eACb;AACCmE,UAAAA,aAAa,EAAE,gBADhB;AAECC,UAAAA,mBAAmB,EAAE;AAFtB,UAGCpE,GAHD,CADa;AAAA,OAJlB;AAUE,MAAA,cAAc,EAAE0D;AAVlB,MADF,CADF,eAeE,0DACE,gCAAC,sBAAD;AACE,MAAA,IAAI,EAAEtC,KAAK,CAACC,IADd;AAEE,MAAA,OAAO,EAAE,iBAAAW,CAAC;AAAA,eAAKZ,KAAK,CAACC,IAAN,GAAaW,CAAlB;AAAA;AAFZ,uBADF,eAOE,gCAAC,IAAD;AAAM,MAAA,OAAO,EAAC,UAAd;AAAyB,MAAA,GAAG,EAAE,EAA9B;AAAkC,MAAA,UAAU,EAAC;AAA7C,oBACE,gCAAC,gCAAD;AACE,MAAA,IAAI,EAAEjC,IADR;AAEE,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,CAFR;AAGE,MAAA,WAAW,EAAE,CAAC,MAAD,EAAS,SAAT,CAHf;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,aAAa,EAAEsE,qBALjB;AAME,MAAA,iBAAiB,sBAAK,gBAAL,EAAwB,YAAxB;AANnB,MADF,eASE,gCAAC,KAAD,CAAO,WAAP,qBACE,gCAAC,KAAD,CAAO,eAAP;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,OAAO,EAAE,CAACtE,IAAI,CAACoB,iBAFjB;AAGE,MAAA,OAAO,EAAEwC,kBAAEW,IAAF,CAAO,mBAAP,EAA4BvE,IAA5B;AAHX,oBAKE,gCAAC,KAAD,CAAO,IAAP;AAAY,MAAA,IAAI,EAAC;AAAjB,MALF,CADF,eAQE,gCAAC,KAAD,CAAO,eAAP;AACE,MAAA,OAAO,EAAE,mBAAM;AACbwE,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OAHH;AAIE,MAAA,KAAK,EAAC;AAJR,oBAME,gCAAC,KAAD,CAAO,IAAP;AAAY,MAAA,IAAI,EAAC;AAAjB,MANF,CARF,CATF,CAPF,eAkCE,6DAlCF,eAmCE,gCAAC,cAAD;AAAM,MAAA,YAAY,EAAC,SAAnB;AAA6B,MAAA,QAAQ,EAAEP,KAAK,CAACQ;AAA7C,oBACE,gCAAC,kBAAD;AAAU,MAAA,KAAK,EAAC;AAAhB,gCAEE,gCAAC,yBAAD;AAAa,MAAA,IAAI,EAAE3E,IAAnB;AAAyB,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,SAAT;AAA/B,MAFF,MADF,eAKE,gCAAC,oBAAD;AAAY,MAAA,KAAK,EAAC;AAAlB,oBACE,gCAAC,8BAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,SAAT,CAFR;AAGE,MAAA,MAAM,EAAEwB,eAAEoD,IAAF,CACN,CAAC,QAAD,EAAW,gBAAX,CADM,EAENtB,OAAO,CAACtD,IAAI,CAACA,IAAL,CAAUG,MAAX,CAAP,CAA0BiC,MAFpB,CAHV;AAOE,MAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,UAAT,CAPZ;AAQE,MAAA,cAAc,EAAE,yBAAiB0B,qBAAjB;AARlB,MADF,CALF,eAiBE,gCAAC,aAAD;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,KAAK,EAAC;AAA7B,oBACE,gCAAC,6BAAD;AACE,MAAA,IAAI,EAAE9D,IADR;AAEE,MAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,UAAT,CAFZ;AAGE,MAAA,aAAa,EAAC,QAHhB;AAIE,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,aAAT,CAJR;AAKE,MAAA,UAAU,EAAE;AAAE6E,QAAAA,SAAS,EAAE;AAAb,OALd;AAME,MAAA,WAAW,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CANf;AAOE,MAAA,QAAQ,EAAC;AAPX,oBASE,gCAAC,uBAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAC;AAA1B,MATF,eAUE,gCAAC,uBAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAC;AAA5B,MAVF,eAWE,gCAAC,uBAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,KAAK,EAAC,EAFR;AAGE,MAAA,MAAM,EAAE;AAAErC,QAAAA,OAAO,EAAE,iBAAAP,CAAC;AAAA,4CAAwBA,CAAxB;AAAA;AAAZ,OAHV;AAIE,MAAA,QAAQ,EAAE;AAAEO,QAAAA,OAAO,EAAE,iBAAAP,CAAC;AAAA,4CAAwBA,CAAxB;AAAA;AAAZ;AAJZ,OAMG,UAAAA,CAAC;AAAA,0BACA;AAAK,QAAA,KAAK,EAAE;AAAE6C,UAAAA,YAAY,EAAE;AAAhB;AAAZ,sBACE,gCAAC,8BAAD;AACE,QAAA,IAAI,EAAEvD,eAAe,CAACU,CAAD,CADvB;AAEE,QAAA,IAAI,EAAE,CAAC,YAAD,EAAe,SAAf,CAFR;AAGE,QAAA,MAAM,EAAET,eAAEuD,IAAF,CACN,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CADM,EAENzB,OAAO,CAACnB,MAAR,CAAeC,MAFT;AAHV,QADF,CADA;AAAA,KANJ,CAXF,CADF,CAjBF,CAnCF,CAfF,CADM;AAAA,GADV,CADgC;AAAA,CAAlC;;eA8Ge;AAAA,sBAAM,gCAAC,oBAAD,QAAgB8B,sBAAhB,CAAN;AAAA,C","sourcesContent":["import _ from 'lodash/fp'\nimport F from 'futil'\nimport React from 'react'\nimport { observable } from 'mobx'\nimport { fromPromise } from 'mobx-utils'\nimport Contexture, { updateSchemas } from '../utils/contexture'\nimport {\n  Awaiter,\n  schemaFieldProps,\n  componentForType,\n  SearchLayout,\n  SearchFilters,\n  SearchTree,\n  ToggleFiltersHeader,\n} from '../..'\nimport { Tab, TabContent, TabLabel, Tabs } from '../../greyVest'\nimport {\n  DateRangePicker,\n  TypeMap,\n  TermsStatsTable,\n  TagsQuerySearchBar,\n  ResultCount,\n  PagedResultTable,\n} from '../../exampleTypes'\nimport { Column } from '../../greyVest/ExpandableTable'\nimport { ThemeConsumer } from '../../utils/theme'\nimport { aspectWrapper } from '../../utils/futil'\n\nlet tree = Contexture({\n  key: 'root',\n  type: 'group',\n  schema: 'movies',\n  children: [\n    {\n      key: 'bar',\n      type: 'tagsQuery',\n      field: 'title',\n    },\n    {\n      key: 'criteria',\n      type: 'group',\n      join: 'and',\n      children: [\n        {\n          key: 'status',\n          field: 'released',\n          type: 'date',\n          useDateMath: true,\n        },\n        {\n          key: 'titleGroup',\n          type: 'group',\n          join: 'or',\n          children: [\n            {\n              key: 'titleContains',\n              type: 'tagsQuery',\n              field: 'title',\n            },\n            {\n              key: 'titleDoesNotContain',\n              type: 'tagsQuery',\n              field: 'title',\n              join: 'none',\n            },\n          ],\n        },\n        {\n          key: 'titleText',\n          type: 'tagsText',\n          field: 'title',\n        },\n        {\n          key: 'searchNumber',\n          type: 'number',\n          field: 'metaScore',\n          min: 0,\n          max: 100,\n        },\n        {\n          key: 'searchFacet',\n          type: 'facet',\n          field: 'genres',\n          paused: true,\n        },\n        {\n          key: 'searchActors',\n          type: 'facet',\n          field: 'actors',\n        },\n        {\n          key: 'date',\n          type: 'date',\n          field: 'released',\n          from: '2011-01-01T05:00:00.000Z',\n          to: '2018-01-01T05:00:00.000Z',\n        },\n        {\n          key: 'IntentionallyBrokenNode',\n          type: 'IntentionallyMissingType',\n          field: 'missingField',\n        },\n        {\n          key: 'ExistsAndBoolDemo',\n          type: 'group',\n          join: 'or',\n          children: [\n            {\n              key: 'missingField',\n              type: 'exists',\n              field: 'Missing Field',\n              value: false,\n            },\n            {\n              // The IMDB index doesn't have a bool type, but that's ok because this is in an OR\n              key: 'missingBool',\n              type: 'bool',\n              field: 'Missing Bool',\n              value: false,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      key: 'results',\n      type: 'results',\n      include: [\n        'imdbId',\n        'runtimeMinutes',\n        'poster',\n        'title',\n        'actors',\n        'genres',\n        'metaScore',\n        'rated',\n        'released',\n        'plot',\n      ],\n      sortField: '',\n    },\n    {\n      key: 'genreScores',\n      type: 'terms_stats',\n      key_field: 'genres',\n      value_field: 'metaScore',\n      order: 'sum',\n      size: 25,\n    },\n  ],\n})\ntree.disableAutoUpdate = true\n\nlet state = observable({\n  mode: 'basic',\n})\n\nlet termDetailsTree = _.memoize(term => {\n  let termTree = Contexture({\n    key: 'detailRoot',\n    type: 'group',\n    schema: 'movies',\n    children: [\n      {\n        key: 'detailFacet',\n        type: 'facet',\n        field: 'genres',\n      },\n      {\n        key: 'results',\n        type: 'results',\n        sortField: 'metaScore',\n        order: 'desc',\n        pageSize: 5,\n      },\n    ],\n  })\n\n  termTree.mutate(['detailRoot', 'detailFacet'], { values: [term] })\n  return termTree\n})\n\nlet divs = _.map(x => <div key={x}>{x}</div>)\nlet overrides = {\n  movies: {\n    fields: {\n      released: { label: 'Release Date' },\n      poster: {\n        display: x => <img src={x} width=\"180\" height=\"270\" />,\n        order: 2,\n      },\n      title: {\n        order: 1,\n        display: x => <span dangerouslySetInnerHTML={{ __html: x }} />,\n      },\n      genres: { display: divs },\n      actors: { display: divs },\n      imdbId: { path: ['Imdb', 'imdbId'] },\n      imdbRating: { path: ['Imdb', 'imdbRating'] },\n      imdbVotes: { path: ['Imdb', 'imdbVotes'] },\n      year: { defaultNodeProps: { number: { min: 2005 } } },\n      metaScore: { significantDigits: 2 },\n    },\n  },\n}\nlet schemas = fromPromise(\n  updateSchemas()\n    .then(_.merge(overrides))\n    .then(_.tap(() => tree.refresh(['root'])))\n)\n\nlet mapNodeToProps = F.mergeOverAll([\n  componentForType(TypeMap),\n  schemaFieldProps('signicantDigits'),\n  ({ key }) =>\n    key === 'status' && {\n      component: DateRangePicker,\n      ranges: [\n        { label: 'All Time', from: '', to: '' },\n        { label: 'This Year', from: 'now/y', to: '' },\n        {\n          label: 'Last Year',\n          from: 'now-1y/y',\n          to: 'now/y',\n        },\n      ],\n    },\n])\n\nlet GreyVestSearchBarStory = theme => (\n  <Awaiter promise={schemas}>\n    {schemas => (\n      <SearchLayout mode={state.mode}>\n        <SearchFilters mode={state.mode} setMode={x => (state.mode = x)}>\n          <SearchTree\n            tree={tree}\n            path={['root', 'criteria']}\n            fields={schemas.movies.fields}\n            mapNodeToLabel={({ key }) =>\n              ({\n                titleContains: 'Title Contains',\n                titleDoesNotContain: 'Title Does Not Contain',\n              }[key])\n            }\n            mapNodeToProps={mapNodeToProps}\n          />\n        </SearchFilters>\n        <div>\n          <ToggleFiltersHeader\n            mode={state.mode}\n            setMode={x => (state.mode = x)}\n          >\n            Search Movies\n          </ToggleFiltersHeader>\n          <Grid columns=\"1fr auto\" gap={10} placeItems=\"center stretch\">\n            <TagsQuerySearchBar\n              tree={tree}\n              path={['root', 'bar']}\n              resultsPath={['root', 'results']}\n              autoFocus\n              actionWrapper={aspectWrapper}\n              searchButtonProps={{ ['data-attribute']: 'attribute1' }}\n            />\n            <theme.ButtonGroup>\n              <theme.AlternateButton\n                title=\"Auto Update\"\n                primary={!tree.disableAutoUpdate}\n                onClick={F.flip('disableAutoUpdate', tree)}\n              >\n                <theme.Icon icon=\"AutoUpdate\" />\n              </theme.AlternateButton>\n              <theme.AlternateButton\n                onClick={() => {\n                  window.location.reload()\n                }}\n                title=\"New Search\"\n              >\n                <theme.Icon icon=\"New\" />\n              </theme.AlternateButton>\n            </theme.ButtonGroup>\n          </Grid>\n          <h1>Search Results</h1>\n          <Tabs defaultValue=\"results\" TabPanel={theme.Box}>\n            <TabLabel value=\"results\">\n              Movies (\n              <ResultCount tree={tree} path={['root', 'results']} />)\n            </TabLabel>\n            <TabContent value=\"results\">\n              <PagedResultTable\n                tree={tree}\n                path={['root', 'results']}\n                fields={_.omit(\n                  ['imdbId', 'runtimeMinutes'],\n                  schemas[tree.tree.schema].fields\n                )}\n                criteria={['root', 'criteria']}\n                mapNodeToProps={componentForType(TypeMap)}\n              />\n            </TabContent>\n            <Tab value=\"analytics\" label=\"Analytics\">\n              <TermsStatsTable\n                tree={tree}\n                criteria={['root', 'criteria']}\n                criteriaField=\"genres\"\n                path={['root', 'genreScores']}\n                tableAttrs={{ className: 'gv-table' }}\n                sizeOptions={[10, 25, 50]}\n                getValue=\"key\"\n              >\n                <Column field=\"key\" label=\"Genre\" />\n                <Column field=\"count\" label=\"Found\" />\n                <Column\n                  field=\"key\"\n                  label=\"\"\n                  expand={{ display: x => `Show results for ${x} +` }}\n                  collapse={{ display: x => `Hide results for ${x} -` }}\n                >\n                  {x => (\n                    <div style={{ marginBottom: 25 }}>\n                      <PagedResultTable\n                        tree={termDetailsTree(x)}\n                        path={['detailRoot', 'results']}\n                        fields={_.pick(\n                          ['title', 'year', 'genres'],\n                          schemas.movies.fields\n                        )}\n                      />\n                    </div>\n                  )}\n                </Column>\n              </TermsStatsTable>\n            </Tab>\n          </Tabs>\n        </div>\n      </SearchLayout>\n    )}\n  </Awaiter>\n)\n\nexport default () => <ThemeConsumer>{GreyVestSearchBarStory}</ThemeConsumer>\n"],"file":"searchLayout.js"}